{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/theme.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_4__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","this","props","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","React","Component","__webpack_require__","d","__webpack_exports__","colors","brand","text","light","m","module","exports","require","default","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_theme__WEBPACK_IMPORTED_MODULE_3__","Layout","_ref","styles","css","node","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","SEO","description","lang","meta","keywords","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-5cc4136e426fec7603ac.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n","export const colors = {\n  brand: '#3F51B5',\n  text: '#373737',\n  light: '#f4f4f4',\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Global, css } from '@emotion/core'\nimport { colors } from './theme'\n\nconst Layout = ({ children }) => (\n  <div>\n    <Global\n      styles={css`\n        body {\n        }\n        * {\n          font-family: -apple-system, blinkmacsystemfont, segoeUI, Roboto,\n            Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji,\n            Segoe UI Symbol;\n\n          margin: 0;\n          padding: 0;\n        }\n\n        a:active {\n          opacity: 0.7;\n        }\n\n        .title-anchor {\n          width: 20px;\n          height: 20px;\n          fill: ${colors.brand};\n        }\n      `}\n    />\n    {children}\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/do-we-really-need-server-side-rendering","result":{"data":{"post":{"__typename":"MdxPost","slug":"/do-we-really-need-server-side-rendering","title":"Do we really need server side rendering?","date":"19.05.2020","tags":null,"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Do we really need server side rendering?\",\n  \"date\": \"2020-05-19T00:00:00.000Z\",\n  \"slug\": \"/do-we-really-need-server-side-rendering\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Server Side Rendering (or SSR) is a really big trend. In the React ecosystem, we have plenty of tools that rely on this like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/\"\n  }), \"Gatsbyjs\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org/\"\n  }), \"Nextjs\"), \".\"), mdx(\"p\", null, \"Before getting further about SSR, let's try to see what happens when a user makes a query on a site that is NOT using SSR:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The browser makes a query on a specific URI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It downloads an empty HTML file that only has a bunch of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<script>\"), \" tags inside to load some JS code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It resolves / parses / compiles the JS code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It executes the JS code and that's only then the application is ready and displays content to the user\")), mdx(\"p\", null, \"This is how the good old \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://angularjs.org/\"\n  }), \"Angularjs\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://jquery.com/\"\n  }), \"JQuery\"), \" applications were working. And this is also what happens when we use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/facebook/create-react-app\"\n  }), \"create-react-app\"), \".\\nWe call this way of building an application \\\"Client Side Rendering\\\" (or CSR).\"), mdx(\"h4\", null, \"Why SSR has been invented?\"), mdx(\"p\", null, \"When building an application using CSR, we \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always\"), \" have to wait for the JS code to be resolved / parsed / compiled / executed \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"before\"), \" having anything displayed on the screen.\\nAnd this can be problematic because:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSR apps are not optimized for SEO (SEO works, but it takes longer)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We don't benefit from a good media sharing experience\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It can take time to boot a huge JS application in the browser\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"I remember having worked on an Angularjs application in 2013 where it took around 7 seconds to display the first content on the page.\")), mdx(\"h4\", null, \"How did they solve these problems?\"), mdx(\"p\", null, \"The main idea behind server side rendering is to generate HTML content and make it available the sooner to the end user.\"), mdx(\"p\", null, \"This way, when a user makes a request:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The browser makes a query on a specific URI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It downloads \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"an already filled HTML file\"), \" and can already display it to the user\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Server Side Rendering (or SSR) is a really big trend. In the React ecosystem, we have plenty of tools that rely on this like  Gatsbyjs  orâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/do-we-really-need-server-side-rendering","formatString":"DD.MM.YYYY"}}}
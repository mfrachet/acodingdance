{"version":3,"sources":["webpack://mfrachet.github.io/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://mfrachet.github.io/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://mfrachet.github.io/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://mfrachet.github.io/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://mfrachet.github.io/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://mfrachet.github.io/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://mfrachet.github.io/./node_modules/prism-react-renderer/prism/index.js","webpack://mfrachet.github.io/./node_modules/prism-react-renderer/dist/index.js","webpack://mfrachet.github.io/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://mfrachet.github.io/./node_modules/prism-react-renderer/themes/dracula/index.js","webpack://mfrachet.github.io/./src/components/Code.js","webpack://mfrachet.github.io/./src/components/List.js","webpack://mfrachet.github.io/./src/components/Em.js","webpack://mfrachet.github.io/./src/components/Img.js","webpack://mfrachet.github.io/./src/components/Iframe.js","webpack://mfrachet.github.io/./src/components/Aside.js","webpack://mfrachet.github.io/./src/templates/course-template.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","writable","configurable","setPrototypeOf","_getPrototypeOf","o","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","toString","indexOf","has","get","set","Wrapper","this","enumerable","uniqueId","_","Token","Prism","util","encode","tokens","type","content","alias","map","replace","match","objId","obj","defineProperty","clone","visited","key","hasOwnProperty","forEach","v","i","languages","extend","id","redef","lang","insertBefore","inside","before","insert","root","grammar","length","newToken","ret","token","DFS","callback","plugins","highlight","text","language","env","code","hooks","run","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","p","len","delNum","slice","after","wrapped","Array","splice","add","name","rest","matchedStr","parent","element","join","tag","classes","attributes","aliases","keys","markup","tagName","includedCdataInside","def","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","variable","toBeCopied","shell","clike","c","keyword","cpp","string","css","addInlined","selectorInside","selector","unit","number","javascript","regex","js","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","withId","unshift","maybeClassNameTokens","comment","interpolation","coffeescript","coffee","diff","PREFIXES","prefix","test","git","go","graphql","markdown","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","tokenizePlaceholders","t","s","substring","middle","replacement","concat","handlebars","punctuation","json","webmanifest","less","makefile","inner","createInline","tableCell","tableRow","tableLine","yaml","l","codeLang","codeBlock","toLowerCase","cls","autoloader","Date","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","md","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","property","scss","sql","stylus","func","typescript","typeInside","ts","tsx","wasm","anchorOrAlias","properties","plainKey","createValuePattern","yml","defaultProps","theme","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","_extends","assign","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Component","Highlight","this$1","props","prevTheme","prevLanguage","ref","className","output","getThemeDict","display","baseStyle","typeStyles","children","getStyleForToken","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","CodeWrapper","styled","Pre","spaces","radius","Line","LineNo","LineContent","List","ListItem","colors","secondary","Em","Img","IframeWrapper","Aside","neutral","shortcodes","Link","h1","Error","h2","Text","as","h3","h4","h5","h6","span","pre","matches","trim","groups","tabIndex","ul","li","em","strong","Strong","img","iframe","loading","aside","SiteRoot","pageContext","location","frontmatter","ThemeProvider","Helmet","title","excerpt","pathname","metaImage","publicURL","metaKeywords","SkipToContent","PageWrapper","Container","Content","Main","Box","marginBottom","Flex","justifyContent","alignItems","aria-hidden","ThemeMenuButton","components","GlobalStyles"],"mappings":"0RACe,SAASA,EAAUC,EAAUC,GAC1C,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIC,UAAU,sDAGtBF,EAASG,UAAYC,OAAOC,OAAOJ,GAAcA,EAAWE,UAAW,CACrEG,YAAa,CACXC,MAAOP,EACPQ,UAAU,EACVC,cAAc,KAGdR,IAAY,EAAAS,EAAA,GAAeV,EAAUC,G,KCb5B,SAASU,EAAgBC,GAItC,OAHAD,EAAkBP,OAAOM,eAAiBN,OAAOS,eAAiB,SAAyBD,GACzF,OAAOA,EAAEE,WAAaV,OAAOS,eAAeD,KAEvBA,GCJV,SAASG,IACtB,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,QAAQjB,UAAUkB,QAAQC,KAAKN,QAAQC,UAAUG,QAAS,IAAI,iBACvD,EACP,MAAOG,GACP,OAAO,GCPI,SAASC,EAAWC,EAAQC,EAAMC,GAc/C,OAZEH,EADE,IACWR,QAAQC,UAER,SAAoBQ,EAAQC,EAAMC,GAC7C,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGF,GAChB,IACIK,EAAW,IADGC,SAASC,KAAKH,MAAML,EAAQG,IAG9C,OADID,IAAO,EAAAjB,EAAA,GAAeqB,EAAUJ,EAAMxB,WACnC4B,IAIOD,MAAM,KAAMI,WCZjB,SAASC,EAAiBR,GACvC,IAAIS,EAAwB,mBAARC,IAAqB,IAAIA,SAAQC,EA8BrD,OA5BAH,EAAmB,SAA0BR,GAC3C,GAAc,OAAVA,ICRkCY,EDQEZ,GCPsB,IAAzDK,SAASQ,SAASlB,KAAKiB,GAAIE,QAAQ,kBDOQ,OAAOd,ECR5C,IAA2BY,EDUtC,GAAqB,mBAAVZ,EACT,MAAM,IAAIzB,UAAU,sDAGtB,QAAsB,IAAXkC,EAAwB,CACjC,GAAIA,EAAOM,IAAIf,GAAQ,OAAOS,EAAOO,IAAIhB,GAEzCS,EAAOQ,IAAIjB,EAAOkB,GAGpB,SAASA,IACP,OAAO,EAAUlB,EAAOO,UAAW,EAAeY,MAAMxC,aAW1D,OARAuC,EAAQ1C,UAAYC,OAAOC,OAAOsB,EAAMxB,UAAW,CACjDG,YAAa,CACXC,MAAOsC,EACPE,YAAY,EACZvC,UAAU,EACVC,cAAc,MAGX,EAAAC,EAAA,GAAemC,EAASlB,KAGTA,GEnB1B,IACMqB,EACAC,EAmTAC,EArTFC,GACEH,EAAW,EACXC,EAAI,CACNG,KAAM,CACJC,OAAQ,SAAgBC,GACtB,OAAIA,aAAkBJ,EACb,IAAIA,EAAMI,EAAOC,KAAMN,EAAEG,KAAKC,OAAOC,EAAOE,SAAUF,EAAOG,OACnC,UAAxBR,EAAEG,KAAKG,KAAKD,GACdA,EAAOI,IAAIT,EAAEG,KAAKC,QAElBC,EAAOK,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,UAAW,MAGlFJ,KAAM,SAAc3C,GAClB,OAAOR,OAAOD,UAAUqC,SAASlB,KAAKV,GAAGgD,MAAM,oBAAoB,IAErEC,MAAO,SAAeC,GAOpB,OANKA,EAAU,MACb1D,OAAO2D,eAAeD,EAAK,OAAQ,CACjCvD,QAASyC,IAINc,EAAU,MAGnBE,MAAO,SAAepD,EAAGqD,GACvB,IAAIV,EAAON,EAAEG,KAAKG,KAAK3C,GAIvB,OAFAqD,EAAUA,GAAW,GAEbV,GACN,IAAK,SACH,GAAIU,EAAQhB,EAAEG,KAAKS,MAAMjD,IACvB,OAAOqD,EAAQhB,EAAEG,KAAKS,MAAMjD,IAM9B,IAAK,IAAIsD,KAHLF,EAAQ,GACZC,EAAQhB,EAAEG,KAAKS,MAAMjD,IAAMoD,EAEXpD,EACVA,EAAEuD,eAAeD,KACnBF,EAAME,GAAOjB,EAAEG,KAAKY,MAAMpD,EAAEsD,GAAMD,IAItC,OAAOD,EAET,IAAK,QACH,GAAIC,EAAQhB,EAAEG,KAAKS,MAAMjD,IACvB,OAAOqD,EAAQhB,EAAEG,KAAKS,MAAMjD,IAG9B,IAAIoD,EAAQ,GAKZ,OAJAC,EAAQhB,EAAEG,KAAKS,MAAMjD,IAAMoD,EAC3BpD,EAAEwD,SAAQ,SAAUC,EAAGC,GACrBN,EAAMM,GAAKrB,EAAEG,KAAKY,MAAMK,EAAGJ,MAEtBD,EAGX,OAAOpD,IAGX2D,UAAW,CACTC,OAAQ,SAAgBC,EAAIC,GAC1B,IAAIC,EAAO1B,EAAEG,KAAKY,MAAMf,EAAEsB,UAAUE,IAEpC,IAAK,IAAIP,KAAOQ,EACdC,EAAKT,GAAOQ,EAAMR,GAGpB,OAAOS,GAYTC,aAAc,SAAsBC,EAAQC,EAAQC,EAAQC,GAE1D,IAAIC,GADJD,EAAOA,GAAQ/B,EAAEsB,WACEM,GAEnB,GAAwB,GAApB3C,UAAUgD,OAAa,CAGzB,IAAK,IAAIC,KAFTJ,EAAS7C,UAAU,GAGb6C,EAAOZ,eAAegB,KACxBF,EAAQE,GAAYJ,EAAOI,IAI/B,OAAOF,EAGT,IAAIG,EAAM,GAEV,IAAK,IAAIC,KAASJ,EAChB,GAAIA,EAAQd,eAAekB,GAAQ,CACjC,GAAIA,GAASP,EACX,IAAK,IAAIK,KAAYJ,EACfA,EAAOZ,eAAegB,KACxBC,EAAID,GAAYJ,EAAOI,IAK7BC,EAAIC,GAASJ,EAAQI,GAWzB,OANApC,EAAEsB,UAAUe,IAAIrC,EAAEsB,WAAW,SAAUL,EAAK3D,GACtCA,IAAUyE,EAAKH,IAAWX,GAAOW,IACnC/B,KAAKoB,GAAOkB,MAITJ,EAAKH,GAAUO,GAGxBE,IAAK,SAAa1E,EAAG2E,EAAUhC,EAAMU,GAGnC,IAAK,IAAIK,KAFTL,EAAUA,GAAW,GAEPrD,EACRA,EAAEuD,eAAeG,KACnBiB,EAASjE,KAAKV,EAAG0D,EAAG1D,EAAE0D,GAAIf,GAAQe,GAER,WAAtBrB,EAAEG,KAAKG,KAAK3C,EAAE0D,KAAqBL,EAAQhB,EAAEG,KAAKS,MAAMjD,EAAE0D,KAI7B,UAAtBrB,EAAEG,KAAKG,KAAK3C,EAAE0D,KAAoBL,EAAQhB,EAAEG,KAAKS,MAAMjD,EAAE0D,OAClEL,EAAQhB,EAAEG,KAAKS,MAAMjD,EAAE0D,MAAO,EAE9BrB,EAAEsB,UAAUe,IAAI1E,EAAE0D,GAAIiB,EAAUjB,EAAGL,KANnCA,EAAQhB,EAAEG,KAAKS,MAAMjD,EAAE0D,MAAO,EAE9BrB,EAAEsB,UAAUe,IAAI1E,EAAE0D,GAAIiB,EAAU,KAAMtB,OAUhDuB,QAAS,GACTC,UAAW,SAAmBC,EAAMT,EAASU,GAC3C,IAAIC,EAAM,CACRC,KAAMH,EACNT,QAASA,EACTU,SAAUA,GASZ,OANA1C,EAAE6C,MAAMC,IAAI,kBAAmBH,GAE/BA,EAAItC,OAASL,EAAE+C,SAASJ,EAAIC,KAAMD,EAAIX,SAEtChC,EAAE6C,MAAMC,IAAI,iBAAkBH,GAEvB1C,EAAM+C,UAAUhD,EAAEG,KAAKC,OAAOuC,EAAItC,QAASsC,EAAID,WAExDO,aAAc,SAAsBR,EAAMS,EAAQlB,EAASmB,EAAOC,EAAUC,EAASC,GACnF,IAAIrD,EAAQD,EAAEC,MAEd,IAAK,IAAImC,KAASJ,EAChB,GAAKA,EAAQd,eAAekB,IAAWJ,EAAQI,GAA/C,CAIA,GAAIA,GAASkB,EACX,OAGF,IAAIC,EAAWvB,EAAQI,GACvBmB,EAAqC,UAA1BvD,EAAEG,KAAKG,KAAKiD,GAAwBA,EAAW,CAACA,GAE3D,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAStB,SAAUuB,EAAG,CACxC,IAAIC,EAAUF,EAASC,GACnB5B,EAAS6B,EAAQ7B,OACjB8B,IAAeD,EAAQC,WACvBC,IAAWF,EAAQE,OACnBC,EAAmB,EACnBpD,EAAQiD,EAAQjD,MAEpB,GAAImD,IAAWF,EAAQA,QAAQI,OAAQ,CAErC,IAAIC,EAAQL,EAAQA,QAAQlE,WAAWoB,MAAM,YAAY,GACzD8C,EAAQA,QAAUM,OAAON,EAAQA,QAAQO,OAAQF,EAAQ,KAG3DL,EAAUA,EAAQA,SAAWA,EAE7B,IAAK,IAAIpC,EAAI8B,EAAOc,EAAMb,EAAU/B,EAAI6B,EAAOjB,OAAQgC,GAAOf,EAAO7B,GAAGY,SAAUZ,EAAG,CACnF,IAAI6C,EAAMhB,EAAO7B,GAEjB,GAAI6B,EAAOjB,OAASQ,EAAKR,OAEvB,OAGF,KAAIiC,aAAejE,GAAnB,CAIA,GAAI0D,GAAUtC,GAAK6B,EAAOjB,OAAS,EAAG,CAIpC,GAHAwB,EAAQU,UAAYF,IAChBtD,EAAQ8C,EAAQW,KAAK3B,IAGvB,MAQF,IALA,IAAI4B,EAAO1D,EAAMwC,OAASO,EAAa/C,EAAM,GAAGsB,OAAS,GACrDqC,EAAK3D,EAAMwC,MAAQxC,EAAM,GAAGsB,OAC5BsC,EAAIlD,EACJmD,EAAIP,EAECQ,EAAMvB,EAAOjB,OAAQsC,EAAIE,IAAQD,EAAIF,IAAOpB,EAAOqB,GAAGjE,OAAS4C,EAAOqB,EAAI,GAAGZ,UAAWY,EAG3FF,IAFJG,GAAKtB,EAAOqB,GAAGtC,YAGXZ,EACF4C,EAAMO,GAKV,GAAItB,EAAO7B,aAAcpB,EACvB,SAIFyE,EAASH,EAAIlD,EACb6C,EAAMzB,EAAKkC,MAAMV,EAAKO,GACtB7D,EAAMwC,OAASc,MACV,CACLR,EAAQU,UAAY,EACpB,IAAIxD,EAAQ8C,EAAQW,KAAKF,GACrBQ,EAAS,EAGf,GAAK/D,EAAL,CAQI+C,IACFE,EAAmBjD,EAAM,GAAKA,EAAM,GAAGsB,OAAS,GAK9CqC,GAFAD,EAAO1D,EAAMwC,MAAQS,IACrBjD,EAAQA,EAAM,GAAGgE,MAAMf,IACL3B,OAFtB,IAGIJ,EAASqC,EAAIS,MAAM,EAAGN,GACtBO,EAAQV,EAAIS,MAAML,GAClB7F,EAAO,CAAC4C,EAAGqD,GAEX7C,MACAR,EACF4C,GAAOpC,EAAOI,OACdxD,EAAKG,KAAKiD,IAGZ,IAAIgD,EAAU,IAAI5E,EAAMmC,EAAOR,EAAS5B,EAAE+C,SAASpC,EAAOiB,GAAUjB,EAAOH,EAAOG,EAAOgD,GAazF,GAZAlF,EAAKG,KAAKiG,GAEND,GACFnG,EAAKG,KAAKgG,GAGZE,MAAM5H,UAAU6H,OAAOlG,MAAMqE,EAAQzE,GAEvB,GAAViG,GACF1E,EAAEiD,aAAaR,EAAMS,EAAQlB,EAASX,EAAG4C,GAAK,EAAM7B,GAGlDiB,EACF,WAtCA,GAAIA,EACF,WA2CZR,MAAO,CACLmC,IAAK,aACLlC,IAAK,SAAamC,EAAMtC,MAE1BI,SAAU,SAAkBN,EAAMT,EAASU,GACzC,IAAIQ,EAAS,CAACT,GACVyC,EAAOlD,EAAQkD,KAEnB,GAAIA,EAAM,CACR,IAAK,IAAI9C,KAAS8C,EAChBlD,EAAQI,GAAS8C,EAAK9C,UAGjBJ,EAAQkD,KAKjB,OAFAlF,EAAEiD,aAAaR,EAAMS,EAAQlB,EAAS,EAAG,GAAG,GAErCkB,KAIPjD,EAAQD,EAAEC,MAAQ,SAAUK,EAAMC,EAASC,EAAO2E,EAAYxB,GAChE9D,KAAKS,KAAOA,EACZT,KAAKU,QAAUA,EACfV,KAAKW,MAAQA,EAEbX,KAAKoC,OAAqC,GAA3BkD,GAAc,IAAIlD,OACjCpC,KAAK8D,SAAWA,IAGZX,UAAY,SAAUrF,EAAG+E,EAAU0C,GACvC,GAAgB,iBAALzH,EACT,OAAOA,EAGT,GAAuB,UAAnBqC,EAAEG,KAAKG,KAAK3C,GACd,OAAOA,EAAE8C,KAAI,SAAU4E,GACrB,OAAOpF,EAAM+C,UAAUqC,EAAS3C,EAAU/E,MACzC2H,KAAK,IAGV,IAAI3C,EAAM,CACRrC,KAAM3C,EAAE2C,KACRC,QAASN,EAAM+C,UAAUrF,EAAE4C,QAASmC,EAAU0C,GAC9CG,IAAK,OACLC,QAAS,CAAC,QAAS7H,EAAE2C,MACrBmF,WAAY,GACZ/C,SAAUA,EACV0C,OAAQA,GAGV,GAAIzH,EAAE6C,MAAO,CACX,IAAIkF,EAAmC,UAAzB1F,EAAEG,KAAKG,KAAK3C,EAAE6C,OAAqB7C,EAAE6C,MAAQ,CAAC7C,EAAE6C,OAC9DsE,MAAM5H,UAAU0B,KAAKC,MAAM8D,EAAI6C,QAASE,GAG1C,IAAID,EAAatI,OAAOwI,KAAKhD,EAAI8C,YAAYhF,KAAI,SAAUwE,GACzD,OAAOA,EAAO,MAAQtC,EAAI8C,WAAWR,IAAS,IAAIvE,QAAQ,KAAM,UAAY,OAC3E4E,KAAK,KACR,MAAO,IAAM3C,EAAI4C,IAAM,WAAa5C,EAAI6C,QAAQF,KAAK,KAAO,KAAOG,EAAa,IAAMA,EAAa,IAAM,IAAM9C,EAAIpC,QAAU,KAAOoC,EAAI4C,IAAM,KAGzIvF,GAOTE,EAAMoB,UAAUsE,OAAS,CACvB,QAAW,kBACX,OAAU,iBACV,QAAW,CAETnC,QAAS,uHACTE,QAAQ,EACR/B,OAAQ,CACN,kBAAmB,CACjB6B,QAAS,sBACTC,YAAY,EACZC,QAAQ,EACR/B,OAAQ,MAGV,OAAU,CACR6B,QAAS,kBACTE,QAAQ,GAEV,YAAe,eACf,cAAe,WACf,KAAQ,eAGZ,MAAS,0BACT,IAAO,CACLF,QAAS,uHACTE,QAAQ,EACR/B,OAAQ,CACN,IAAO,CACL6B,QAAS,iBACT7B,OAAQ,CACN,YAAe,QACf,UAAa,iBAGjB,aAAc,CACZ6B,QAAS,qCACT7B,OAAQ,CACN,YAAe,CAAC,CACd6B,QAAS,KACTjD,MAAO,eACN,SAGP,YAAe,OACf,YAAa,CACXiD,QAAS,YACT7B,OAAQ,CACN,UAAa,mBAKrB,OAAU,CAAC,CACT6B,QAAS,kBACTjD,MAAO,gBACN,uBAELN,EAAMoB,UAAUsE,OAAY,IAAEhE,OAAO,cAAcA,OAAe,OAAI1B,EAAMoB,UAAUsE,OAAe,OACrG1F,EAAMoB,UAAUsE,OAAgB,QAAEhE,OAAO,mBAAmBA,OAAS1B,EAAMoB,UAAUsE,OAErF1F,EAAM2C,MAAMmC,IAAI,QAAQ,SAAUrC,GACf,WAAbA,EAAIrC,OACNqC,EAAI8C,WAAkB,MAAI9C,EAAIpC,QAAQG,QAAQ,QAAS,SAG3DvD,OAAO2D,eAAeZ,EAAMoB,UAAUsE,OAAOL,IAAK,aAAc,CAY9DjI,MAAO,SAAoBuI,EAASnE,GAClC,IAAIoE,EAAsB,GAC1BA,EAAoB,YAAcpE,GAAQ,CACxC+B,QAAS,oCACTC,YAAY,EACZ9B,OAAQ1B,EAAMoB,UAAUI,IAE1BoE,EAA2B,MAAI,uBAC/B,IAAIlE,EAAS,CACX,iBAAkB,CAChB6B,QAAS,4BACT7B,OAAQkE,IAGZlE,EAAO,YAAcF,GAAQ,CAC3B+B,QAAS,UACT7B,OAAQ1B,EAAMoB,UAAUI,IAE1B,IAAIqE,EAAM,GACVA,EAAIF,GAAW,CACbpC,QAASM,OAAO,wFAAwFC,OAAOtD,QAAQ,OAAO,WAC5H,OAAOmF,KACL,KACJnC,YAAY,EACZC,QAAQ,EACR/B,OAAQA,GAEV1B,EAAMoB,UAAUK,aAAa,SAAU,QAASoE,MAGpD7F,EAAMoB,UAAU0E,KAAO9F,EAAMoB,UAAUsE,OACvC1F,EAAMoB,UAAU2E,OAAS/F,EAAMoB,UAAUsE,OACzC1F,EAAMoB,UAAU4E,IAAMhG,EAAMoB,UAAUsE,OACtC1F,EAAMoB,UAAU6E,IAAMjG,EAAMoB,UAAUC,OAAO,SAAU,IACvDrB,EAAMoB,UAAU8E,KAAOlG,EAAMoB,UAAU6E,IACvCjG,EAAMoB,UAAU+E,KAAOnG,EAAMoB,UAAU6E,IACvCjG,EAAMoB,UAAUgF,IAAMpG,EAAMoB,UAAU6E,IAGtC,SAAWjG,GAKT,IAAIqG,EAAU,0oCACVC,EAAsB,CACxB/C,QAAS,4BACTC,YAAY,EACZlD,MAAO,cAEPoB,OAAQ,MAGN6E,EAAe,CACjB,KAAQD,EACR,YAAe,CACb/C,QAASM,OAAO,MAAQwC,GACxB/F,MAAO,YAET,SAAY,CACZ,CACEiD,QAAS,sBACTE,QAAQ,EACR/B,OAAQ,CAEN,SAAY,CAAC,CACX6B,QAAS,uBACTC,YAAY,GACX,WACH,OAAU,8DAEV,SAAY,6FAEZ,YAAe,oBAGnB,CACED,QAAS,qCACTE,QAAQ,EACR/B,OAAQ,CACN,SAAY,oBAGhB,CACE6B,QAAS,cACTE,QAAQ,EACR/B,OAAQ,CACN,SAAY,mCACZ,YAAe,SACf,YAAe,CACb6B,QAASM,OAAO,QAAUwC,GAC1B7C,YAAY,EACZlD,MAAO,cAGV,sBAEH,OAAU,wFAEZN,EAAMoB,UAAUoF,KAAO,CACrB,QAAW,CACTjD,QAAS,aACTjD,MAAO,aAET,QAAW,CACTiD,QAAS,kBACTC,YAAY,GAEd,gBAAiB,CAIjB,CAEED,QAAS,+CACTC,YAAY,EACZlD,MAAO,YACN,CAEDiD,QAAS,2BACTjD,MAAO,aAGT,gBAAiB,CACfiD,QAAS,sCACTjD,MAAO,WACPkD,YAAY,GAId,cAAe,CACbD,QAAS,gCACT7B,OAAQ,CACN,YAAe,CACb6B,QAASM,OAAO,uBAAyBwC,GACzC7C,YAAY,EACZlD,MAAO,aAGXA,MAAO,WACPkD,YAAY,GAEd,OAAU,CACV,CACED,QAAS,oDACTC,YAAY,EACZC,QAAQ,EACR/B,OAAQ6E,GAGV,CACEhD,QAAS,2DACTC,YAAY,EACZC,QAAQ,EACR/B,OAAQ,CACN,KAAQ4E,IAGZ,CACE/C,QAAS,qFACTC,YAAY,EACZC,QAAQ,EACR/B,OAAQ6E,IAEV,YAAe,CACbhD,QAASM,OAAO,OAASwC,GACzB/F,MAAO,YAET,SAAYiG,EAAaE,SACzB,SAAY,CACVlD,QAAS,ogDACTC,YAAY,GAEd,QAAW,CACTD,QAAS,gHACTC,YAAY,GAGd,QAAW,CACTD,QAAS,6SACTC,YAAY,EAEZlD,MAAO,cAET,QAAW,CACTiD,QAAS,iDACTC,YAAY,GAEd,kBAAmB,CACjBD,QAAS,UACTjD,MAAO,aAET,SAAY,CAEViD,QAAS,6EACT7B,OAAQ,CACN,kBAAmB,CACjB6B,QAAS,MACTjD,MAAO,eAIb,YAAe,iCACf,OAAU,CACRiD,QAAS,qCACTC,YAAY,IAGhB8C,EAAoB5E,OAAS1B,EAAMoB,UAAUoF,KAM7C,IAHA,IAAIE,EAAa,CAAC,UAAW,gBAAiB,gBAAiB,cAAe,SAAU,cAAe,WAAY,UAAW,UAAW,UAAW,kBAAmB,WAAY,cAAe,UAC9LhF,EAAS6E,EAAaE,SAAS,GAAG/E,OAE7BP,EAAI,EAAGA,EAAIuF,EAAW3E,OAAQZ,IACrCO,EAAOgF,EAAWvF,IAAMnB,EAAMoB,UAAUoF,KAAKE,EAAWvF,IAG1DnB,EAAMoB,UAAUuF,MAAQ3G,EAAMoB,UAAUoF,KAnL1C,CAoLGxG,GAIHA,EAAMoB,UAAUwF,MAAQ,CACtB,QAAW,CAAC,CACVrD,QAAS,kCACTC,YAAY,EACZC,QAAQ,GACP,CACDF,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAEV,OAAU,CACRF,QAAS,iDACTE,QAAQ,GAEV,aAAc,CACZF,QAAS,2FACTC,YAAY,EACZ9B,OAAQ,CACN,YAAe,UAGnB,QAAW,6GACX,QAAW,qBACX,SAAY,YACZ,OAAU,4DACV,SAAY,+CACZ,YAAe,iBAIjB1B,EAAMoB,UAAUyF,EAAI7G,EAAMoB,UAAUC,OAAO,QAAS,CAClD,QAAW,CACTkC,QAAS,sEACTE,QAAQ,GAEV,aAAc,CACZF,QAAS,mFACTC,YAAY,GAEd,QAAW,oVACX,SAAY,sBACZ,OAAU,oHACV,SAAY,oDAEdxD,EAAMoB,UAAUK,aAAa,IAAK,SAAU,CAC1C,MAAS,CAGP8B,QAAS,yFACTC,YAAY,EACZC,QAAQ,EACRnD,MAAO,WACPoB,OAAQ,CACN,OAAU,CAAC,CAET6B,QAAS,2BACTC,YAAY,GACXxD,EAAMoB,UAAUyF,EAAU,QAC7B,QAAW7G,EAAMoB,UAAUyF,EAAW,QACtC,aAAc,CAAC,CACbtD,QAAS,+BACTC,YAAY,GACX,CACDD,QAAS,+BACTC,YAAY,EACZlD,MAAO,aAGT,UAAa,CACXiD,QAAS,gBACTC,YAAY,EACZlD,MAAO,WAET,iBAAkB,KAClB,YAAe,kBACf,WAAc,CACZiD,QAAS,YACT7B,OAAQ1B,EAAMoB,UAAUyF,KAK9B,SAAY,sIAEP7G,EAAMoB,UAAUyF,EAAW,QAGlC,SAAW7G,GACT,IAAI8G,EAAU,uqBACd9G,EAAMoB,UAAU2F,IAAM/G,EAAMoB,UAAUC,OAAO,IAAK,CAChD,aAAc,CAAC,CACbkC,QAASM,OAAO,gEAAgEC,OAAOtD,QAAQ,cAAc,WAC3G,OAAOsG,EAAQhD,WAEjBN,YAAY,GAKd,iCAEA,oCAEA,gEACA,QAAWsD,EACX,OAAU,CACRvD,QAAS,iJACTE,QAAQ,GAEV,SAAY,qHACZ,QAAW,uBAEbzD,EAAMoB,UAAUK,aAAa,MAAO,SAAU,CAC5C,aAAc,CACZ8B,QAAS,oCACTjD,MAAO,SACPmD,QAAQ,KAGZzD,EAAMoB,UAAUK,aAAa,MAAO,aAAc,CAGhD,cAAe,CACb8B,QAAS,6EACTC,YAAY,EACZC,QAAQ,EACR/B,OAAQ1B,EAAMoB,UAAUC,OAAO,MAAO,OAG1CrB,EAAMoB,UAAUK,aAAa,SAAU,WAAY,CAEjD,aAAc,2BACbzB,EAAMoB,UAAU2F,IAAI,gBA7CzB,CA8CG/G,GAIH,SAAWA,GACT,IAAIgH,EAAS,gDACbhH,EAAMoB,UAAU6F,IAAM,CACpB,QAAW,mBACX,OAAU,CACR1D,QAAS,iDACT7B,OAAQ,CACN,KAAQ,WACR,6BAA8B,CAC5B6B,QAAS,4FACTC,YAAY,EACZlD,MAAO,YAET,QAAW,CACTiD,QAAS,yCACTC,YAAY,KAKlB,IAAO,CAELD,QAASM,OAAO,eAAiBmD,EAAOlD,OAAS,IAAM,8BAA8BA,OAAS,OAAQ,KACtGL,QAAQ,EACR/B,OAAQ,CACN,SAAY,QACZ,YAAe,UACf,OAAU,CACR6B,QAASM,OAAO,IAAMmD,EAAOlD,OAAS,KACtCxD,MAAO,SAIb,SAAYuD,OAAO,0CAA4CmD,EAAOlD,OAAS,iBAC/E,OAAU,CACRP,QAASyD,EACTvD,QAAQ,GAEV,SAAY,+DACZ,UAAa,gBACb,SAAY,oBACZ,YAAe,aAEjBzD,EAAMoB,UAAU6F,IAAY,OAAEvF,OAAOsD,KAAOhF,EAAMoB,UAAU6F,IAC5D,IAAIvB,EAAS1F,EAAMoB,UAAUsE,OAEzBA,IACFA,EAAOL,IAAI6B,WAAW,QAAS,OAC/BlH,EAAMoB,UAAUK,aAAa,SAAU,aAAc,CACnD,aAAc,CACZ8B,QAAS,6CACTC,YAAY,EACZ9B,OAAQ,CACN,aAAc,CACZ6B,QAAS,qCACT7B,OAAQ,CACN,MAAS,CACP6B,QAAS,yBACTC,YAAY,EACZlD,MAAO,eACPoB,OAAQ1B,EAAMoB,UAAU6F,KAE1B,YAAe,CAAC,CACd1D,QAAS,KACTjD,MAAO,eACN,SAGP,YAAa,aAGhBoF,EAAOL,MAvEd,CAyEGrF,GAIH,SAAWA,GACT,IACImH,EADAH,EAAS,gDAEbhH,EAAMoB,UAAU6F,IAAIG,SAAW,CAC7B7D,QAASvD,EAAMoB,UAAU6F,IAAIG,SAC7B1F,OAAQyF,EAAiB,CACvB,iBAAkB,+DAClB,eAAgB,UAChB,MAAS,WACT,GAAM,UACN,UAAa,CACX5D,QAASM,OAAO,oBAAsBmD,EAAOlD,OAAS,SACtDL,QAAQ,EACR/B,OAAQ,CACN,YAAe,UACf,mBAAoB,CAClB6B,QAAS,aACTC,YAAY,EACZlD,MAAO,WAET,UAAa,CACXiD,QAAS,4CACTC,YAAY,EACZ9B,OAAQ,CACN,YAAe,QAGnB,YAAa,CACX6B,QAAS,oCACTC,YAAY,GAEd,aAAc,CAACwD,EAAQ,CACrBzD,QAAS,4CACTC,YAAY,IAEd,SAAY,cAGhB,OAAQ,CAAC,CACPD,QAAS,kDACTC,YAAY,EACZ9B,OAAQ,CACN,OAAU,SACV,SAAY,SAEb,CACD6B,QAAS,gCACTC,YAAY,IAEd,WAAc,cAId,YAAe,UAGnBxD,EAAMoB,UAAU6F,IAAY,OAAEvF,OAAO,8BAA8BA,OAASyF,EAC5EnH,EAAMoB,UAAUK,aAAa,MAAO,WAAY,CAC9C,SAAY,CACV8B,QAAS,8EACTC,YAAY,KAGhB,IAAI6D,EAAO,CACT9D,QAAS,wBACTC,YAAY,GAGV8D,EAAS,CACX/D,QAAS,uCACTC,YAAY,GAEdxD,EAAMoB,UAAUK,aAAa,MAAO,WAAY,CAC9C,SAAY,CACV8B,QAAS,qBACTC,YAAY,GAId,QAAW,CACTD,QAAS,8BACTjD,MAAO,SAET,MAAS,CAAC,q5CAAs5C,CAC95CiD,QAAS,4JACT7B,OAAQ,CACN,KAAQ2F,EACR,OAAUC,EACV,SAAY,eACZ,YAAe,WAInB,OAAU,kBACV,KAAQD,EACR,OAAUC,IA/Fd,CAiGGtH,GAIHA,EAAMoB,UAAUmG,WAAavH,EAAMoB,UAAUC,OAAO,QAAS,CAC3D,aAAc,CAACrB,EAAMoB,UAAUwF,MAAM,cAAe,CAClDrD,QAAS,0GACTC,YAAY,IAEd,QAAW,CAAC,CACVD,QAAS,kCACTC,YAAY,GACX,CACDD,QAAS,oZACTC,YAAY,IAGd,SAAY,oGACZ,OAAU,gOACV,SAAY,8FAEdxD,EAAMoB,UAAUmG,WAAW,cAAc,GAAGhE,QAAU,uEACtDvD,EAAMoB,UAAUK,aAAa,aAAc,UAAW,CACpD,MAAS,CACP8B,QAAS,uLACTC,YAAY,EACZC,QAAQ,EACR/B,OAAQ,CACN,eAAgB,CACd6B,QAAS,4BACTC,YAAY,EACZlD,MAAO,iBACPoB,OAAQ1B,EAAMoB,UAAUoG,OAE1B,cAAe,UACf,kBAAmB,YAIvB,oBAAqB,CACnBjE,QAAS,gMACTjD,MAAO,YAET,UAAa,CAAC,CACZiD,QAAS,sIACTC,YAAY,EACZ9B,OAAQ1B,EAAMoB,UAAUmG,YACvB,CACDhE,QAAS,mEACT7B,OAAQ1B,EAAMoB,UAAUmG,YACvB,CACDhE,QAAS,kEACTC,YAAY,EACZ9B,OAAQ1B,EAAMoB,UAAUmG,YACvB,CACDhE,QAAS,8eACTC,YAAY,EACZ9B,OAAQ1B,EAAMoB,UAAUmG,aAE1B,SAAY,8BAEdvH,EAAMoB,UAAUK,aAAa,aAAc,SAAU,CACnD,kBAAmB,CACjB8B,QAAS,oEACTE,QAAQ,EACR/B,OAAQ,CACN,uBAAwB,CACtB6B,QAAS,QACTjD,MAAO,UAET,cAAiB,CACfiD,QAAS,6DACTC,YAAY,EACZ9B,OAAQ,CACN,4BAA6B,CAC3B6B,QAAS,UACTjD,MAAO,eAET0E,KAAMhF,EAAMoB,UAAUmG,aAG1B,OAAU,cAKZvH,EAAMoB,UAAUsE,QAClB1F,EAAMoB,UAAUsE,OAAOL,IAAI6B,WAAW,SAAU,cAGlDlH,EAAMoB,UAAUqG,GAAKzH,EAAMoB,UAAUmG,WAGrC,SAAWvH,GACT,IAAIuH,EAAavH,EAAMC,KAAKY,MAAMb,EAAMoB,UAAUmG,YAClDvH,EAAMoB,UAAUsG,IAAM1H,EAAMoB,UAAUC,OAAO,SAAUkG,GACvDvH,EAAMoB,UAAUsG,IAAIrC,IAAI9B,QAAU,2MAClCvD,EAAMoB,UAAUsG,IAAIrC,IAAI3D,OAAY,IAAE6B,QAAU,kBAChDvD,EAAMoB,UAAUsG,IAAIrC,IAAI3D,OAAO,cAAc6B,QAAU,gEACvDvD,EAAMoB,UAAUsG,IAAIrC,IAAI3D,OAAY,IAAEA,OAAO,cAAgB,4BAC7D1B,EAAMoB,UAAUK,aAAa,SAAU,YAAa,CAClD,OAAU,CACR8B,QAAS,sDACT7B,OAAQ,CACN,YAAe,cACf,aAAc,SAGjB1B,EAAMoB,UAAUsG,IAAIrC,KACvBrF,EAAMoB,UAAUK,aAAa,SAAU,aAAc,CACnD,OAAU,CAER8B,QAAS,iDACT7B,OAAQ,CACN,qBAAsB,CACpB6B,QAAS,UACTjD,MAAO,eAET0E,KAAMhF,EAAMoB,UAAUsG,KAExB,MAAS,wBAEV1H,EAAMoB,UAAUsG,IAAIrC,KAEvB,IAAIsC,EAAiB,SAASA,EAAezF,GAC3C,OAAKA,EAIgB,iBAAVA,EACFA,EAGoB,iBAAlBA,EAAM7B,QACR6B,EAAM7B,QAGR6B,EAAM7B,QAAQE,IAAIoH,GAAgBvC,KAAK,IAXrC,IAcPwC,EAAa,SAASA,EAAWzH,GAGnC,IAFA,IAAI0H,EAAa,GAER1G,EAAI,EAAGA,EAAIhB,EAAO4B,OAAQZ,IAAK,CACtC,IAAIe,EAAQ/B,EAAOgB,GACf2G,GAAiB,EA+BrB,GA7BqB,iBAAV5F,IACU,QAAfA,EAAM9B,MAAkB8B,EAAM7B,QAAQ,IAAgC,QAA1B6B,EAAM7B,QAAQ,GAAGD,KAEnB,OAAxC8B,EAAM7B,QAAQ,GAAGA,QAAQ,GAAGA,QAE1BwH,EAAW9F,OAAS,GAAK8F,EAAWA,EAAW9F,OAAS,GAAG4D,UAAYgC,EAAezF,EAAM7B,QAAQ,GAAGA,QAAQ,KAEjHwH,EAAWE,MAG2C,OAApD7F,EAAM7B,QAAQ6B,EAAM7B,QAAQ0B,OAAS,GAAG1B,SAE1CwH,EAAWnJ,KAAK,CACdiH,QAASgC,EAAezF,EAAM7B,QAAQ,GAAGA,QAAQ,IACjD2H,aAAc,IAIXH,EAAW9F,OAAS,GAAoB,gBAAfG,EAAM9B,MAA4C,MAAlB8B,EAAM7B,QAExEwH,EAAWA,EAAW9F,OAAS,GAAGiG,eACzBH,EAAW9F,OAAS,GAAK8F,EAAWA,EAAW9F,OAAS,GAAGiG,aAAe,GAAoB,gBAAf9F,EAAM9B,MAA4C,MAAlB8B,EAAM7B,QAE9HwH,EAAWA,EAAW9F,OAAS,GAAGiG,eAElCF,GAAiB,IAIjBA,GAAmC,iBAAV5F,IACvB2F,EAAW9F,OAAS,GAAwD,IAAnD8F,EAAWA,EAAW9F,OAAS,GAAGiG,aAAoB,CAGjF,IAAIC,EAAYN,EAAezF,GAE3Bf,EAAIhB,EAAO4B,OAAS,IAA+B,iBAAlB5B,EAAOgB,EAAI,IAA0C,eAAvBhB,EAAOgB,EAAI,GAAGf,QAC/E6H,GAAaN,EAAexH,EAAOgB,EAAI,IACvChB,EAAO0E,OAAO1D,EAAI,EAAG,IAGnBA,EAAI,IAA+B,iBAAlBhB,EAAOgB,EAAI,IAA0C,eAAvBhB,EAAOgB,EAAI,GAAGf,QAC/D6H,EAAYN,EAAexH,EAAOgB,EAAI,IAAM8G,EAC5C9H,EAAO0E,OAAO1D,EAAI,EAAG,GACrBA,KAGFhB,EAAOgB,GAAK,IAAInB,EAAMD,MAAM,aAAckI,EAAW,KAAMA,GAI3D/F,EAAM7B,SAAoC,iBAAlB6B,EAAM7B,SAChCuH,EAAW1F,EAAM7B,WAKvBL,EAAM2C,MAAMmC,IAAI,kBAAkB,SAAUrC,GACrB,QAAjBA,EAAID,UAAuC,QAAjBC,EAAID,UAIlCoF,EAAWnF,EAAItC,WAnHnB,CAqHGH,GAIH,SAAWA,GAmCT,SAASkI,EAAOpE,EAAQF,GACtB,OAAOC,OAAOC,EAAOtD,QAAQ,SAAS,WACpC,MAAO,yDAAyDsD,UAC9DF,GArCN5D,EAAMoB,UAAUK,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjB8B,QAASM,OAAO,YAAc7D,EAAMoB,UAAUmG,WAAW,qBAAqBhE,QAAQO,QACtFN,YAAY,EACZlD,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDN,EAAMoB,UAAUK,aAAa,aAAc,WAAY,CACrD,OAAU,CACR8B,QAASM,OAAO,YAAc7D,EAAMoB,UAAUmG,WAAqB,SAAEzD,QACrEN,YAAY,EACZlD,MAAO,CAAC,WAAY,sBAGxBN,EAAMoB,UAAUK,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAAC,CAGnB8B,QAAS,yOACTjD,MAAO,cACN,CAEDiD,QAAS,wBACTjD,MAAO,iBAiBXN,EAAMoB,UAAUK,aAAa,aAAc,UAAW,CACpD,QAAW,CAET8B,QAAS2E,EAAO,4GAA4GpE,QAC5HN,YAAY,EACZ9B,OAAQ1B,EAAMoB,UAAUmG,YAE1B,QAAW,CAEThE,QAAS2E,EAAO,mEAAmEpE,QACnFN,YAAY,EACZ9B,OAAQ1B,EAAMoB,UAAUmG,cAG5BvH,EAAMoB,UAAUmG,WAAoB,QAAEY,QAAQ,CAC5C5E,QAAS,wCACTjD,MAAO,UACN,CACDiD,QAAS,gGACTjD,MAAO,gBACN,CACDiD,QAAS,WACTjD,MAAO,CAAC,OAAQ,QACf,CACDiD,QAAS,gBACTjD,MAAO,QAETN,EAAMoB,UAAUK,aAAa,aAAc,WAAY,CACrD,OAAU,CACR8B,QAAS,QACTjD,MAAO,YAET,MAAS,CACPiD,QAAS,KACTjD,MAAO,cAGXN,EAAMoB,UAAUK,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjB8B,QAAS2E,EAAO,gBAAgBpE,QAChCN,YAAY,GAEd,mBAAoB,CAClBD,QAAS,8CACTC,YAAY,GAEd,IAAO,CAELD,QAAS,kFACTjD,MAAO,YAET,QAAW,CACTiD,QAAS,qBACTjD,MAAO,gBAMX,IAFA,IAAI8H,EAAuB,CAAC,WAAY,oBAAqB,SAAU,kBAAmB,mBAEjFjH,EAAI,EAAGA,EAAIiH,EAAqBrG,OAAQZ,IAAK,CACpD,IAAIe,EAAQkG,EAAqBjH,GAC7B/D,EAAQ4C,EAAMoB,UAAUmG,WAAWrF,GAER,WAA3BlC,EAAMC,KAAKG,KAAKhD,KAClBA,EAAQ4C,EAAMoB,UAAUmG,WAAWrF,GAAS,CAC1CqB,QAASnG,IAKb,IAAIsE,EAAStE,EAAMsE,QAAU,GAC7BtE,EAAMsE,OAASA,EACfA,EAAO,oBAAsB,iBAjHjC,CAmHG1B,GAIH,SAAWA,GAET,IAAIqI,EAAU,YACVC,EAAgB,CAClB/E,QAAS,aACTjD,MAAO,YAETN,EAAMoB,UAAUmH,aAAevI,EAAMoB,UAAUC,OAAO,aAAc,CAClE,QAAWgH,EACX,OAAU,CACV,CACE9E,QAAS,yBACTE,QAAQ,GACP,CAEDF,QAAS,yBACTE,QAAQ,EACR/B,OAAQ,CACN,cAAiB4G,KAGrB,QAAW,mSACX,eAAgB,CACd/E,QAAS,aACTjD,MAAO,cAGXN,EAAMoB,UAAUK,aAAa,eAAgB,UAAW,CACtD,oBAAqB,CACnB8B,QAAS,iBACTjD,MAAO,WAGT,cAAe,CACbiD,QAAS,qBACTjD,MAAO,QACPoB,OAAQ,CACN,QAAW2G,EACX,cAAiBC,MAIvBtI,EAAMoB,UAAUK,aAAa,eAAgB,SAAU,CACrD,oBAAqB,CACnB8B,QAAS,yBACT7B,OAAQ,CACN,UAAa,CACX6B,QAAS,QACTjD,MAAO,eAET,OAAU,CACRiD,QAAS,UACTjD,MAAO,sBACPoB,OAAQ1B,EAAMoB,UAAUmG,cAK9B,mBAAoB,CAAC,CACnBhE,QAAS,iBACTE,QAAQ,EACRnD,MAAO,UACN,CACDiD,QAAS,iBACTE,QAAQ,EACRnD,MAAO,SACPoB,OAAQ,CACN4G,cAAeA,OAIrBtI,EAAMoB,UAAUK,aAAa,eAAgB,UAAW,CAEtD,SAAY,kCAEPzB,EAAMoB,UAAUmH,aAAa,mBACpCvI,EAAMoB,UAAUoH,OAASxI,EAAMoB,UAAUmH,aA5E3C,CA6EGvI,GAIH,SAAWA,GACTA,EAAMoB,UAAUqH,KAAO,CACrB,MAAS,CACT,4BACA,YACA,YASF,IAAIC,EAAW,CACb,eAAgB,IAChB,gBAAiB,IACjB,gBAAiB,IACjB,iBAAkB,IAClB,UAAa,IACb,KAAQ,KAGVzL,OAAOwI,KAAKiD,GAAUzH,SAAQ,SAAU8D,GACtC,IAAI4D,EAASD,EAAS3D,GAClBzE,EAAQ,GAEP,QAAQsI,KAAK7D,IAEhBzE,EAAM5B,KAAK,MAAMwF,KAAKa,GAAM,IAGjB,SAATA,GACFzE,EAAM5B,KAAK,QAGbsB,EAAMoB,UAAUqH,KAAK1D,GAAQ,CAC3BxB,QAASM,OAAO,QAAU8E,EAAS,iCAAkC,KACrErI,MAAOA,EACPoB,OAAQ,CACN,KAAQ,CACN6B,QAAS,+BACTC,YAAY,GAEd,OAAU,CACRD,QAAS,SACTjD,MAAO,MAAM4D,KAAKa,GAAM,SAMhC9H,OAAO2D,eAAeZ,EAAMoB,UAAUqH,KAAM,WAAY,CACtDrL,MAAOsL,IArDX,CAuDG1I,GAIHA,EAAMoB,UAAUyH,IAAM,CAUpB,QAAW,QAKX,QAAW,WACX,SAAY,SAKZ,OAAU,mCAOV,QAAW,CACTtF,QAAS,iBACT7B,OAAQ,CAON,UAAa,cAiBjB,MAAS,YAYT,cAAe,oBAIjB1B,EAAMoB,UAAU0H,GAAK9I,EAAMoB,UAAUC,OAAO,QAAS,CACnD,OAAU,CACRkC,QAAS,qCACTE,QAAQ,GAEV,QAAW,sKACX,QAAW,gCACX,OAAU,gEACV,SAAY,wFACZ,QAAW,oMAENzD,EAAMoB,UAAU0H,GAAG,cAG1B9I,EAAMoB,UAAU2H,QAAU,CACxB,QAAW,MACX,YAAe,CACbxF,QAAS,mEACTE,QAAQ,EACRnD,MAAO,SACPoB,OAAQ,CACN,oBAAqB,CACnB6B,QAAS,kCACTC,YAAY,EACZ9B,OAAQ1B,EAAMoB,UAAU4H,YAI9B,OAAU,CACRzF,QAAS,iDACTE,QAAQ,GAEV,OAAU,2CACV,QAAW,qBACX,SAAY,eACZ,UAAa,CACXF,QAAS,cACTjD,MAAO,YAET,YAAa,CACXiD,QAAS,+DACTE,QAAQ,GAEV,aAAc,CACZF,QAAS,6EACTC,YAAY,GAEd,SAAY,CACVD,QAAS,+CACTC,YAAY,EACZlD,MAAO,YAET,QAAW,uIACX,SAAY,eACZ,YAAe,iBACf,SAAY,8BAId,SAAWN,GAQT,SAASiJ,EAAezG,EAAUS,GAChC,MAAO,MAAQT,EAAS0G,cAAgBjG,EAAQ,MAGlDhG,OAAOkM,iBAAiBnJ,EAAMoB,UAAU,qBAAuB,GAAI,CACjEgI,kBAAmB,CAYjBhM,MAAO,SAAeqF,EAAKD,EAAU6G,EAAoBC,GACvD,GAAI7G,EAAID,WAAaA,EAArB,CAIA,IAAI+G,EAAa9G,EAAI8G,WAAa,GAClC9G,EAAIC,KAAOD,EAAIC,KAAKlC,QAAQ6I,GAAoB,SAAU5I,GACxD,GAA6B,mBAAlB6I,IAAiCA,EAAc7I,GACxD,OAAOA,EAMT,IAHA,IACI+I,EADArI,EAAIoI,EAAWxH,QAGqD,IAAjEU,EAAIC,KAAKpD,QAAQkK,EAAcP,EAAezG,EAAUrB,OAC3DA,EAKJ,OADAoI,EAAWpI,GAAKV,EACT+I,KAGT/G,EAAIX,QAAU9B,EAAMoB,UAAUsE,UAGlC+D,qBAAsB,CAOpBrM,MAAO,SAAeqF,EAAKD,GACzB,GAAIC,EAAID,WAAaA,GAAaC,EAAI8G,WAAtC,CAKA9G,EAAIX,QAAU9B,EAAMoB,UAAUoB,GAC9B,IAAIc,EAAI,EACJmC,EAAOxI,OAAOwI,KAAKhD,EAAI8G,aAE3B,SAAS3B,EAAWzH,GAClB,IAAK,IAAIgB,EAAI,EAAGA,EAAIhB,EAAO4B,UAErBuB,GAAKmC,EAAK1D,QAFmBZ,IAAK,CAMtC,IAAIe,EAAQ/B,EAAOgB,GAEnB,GAAqB,iBAAVe,GAAsBA,EAAM7B,SAAoC,iBAAlB6B,EAAM7B,QAAsB,CACnF,IAAIgE,EAAIoB,EAAKnC,GACToG,EAAIjH,EAAI8G,WAAWlF,GACnBsF,EAAqB,iBAAVzH,EAAqBA,EAAQA,EAAM7B,QAC9CmJ,EAAcP,EAAezG,EAAU6B,GACvCpB,EAAQ0G,EAAErK,QAAQkK,GAEtB,GAAIvG,GAAS,EAAG,GACZK,EACF,IAAI3B,EAASgI,EAAEC,UAAU,EAAG3G,GACxB4G,EAAS,IAAI7J,EAAMD,MAAMyC,EAAUxC,EAAM6C,SAAS6G,EAAGjH,EAAIX,SAAU,YAAcU,EAAUkH,GAC3FhF,EAAQiF,EAAEC,UAAU3G,EAAQuG,EAAYzH,QACxC+H,EAAc,GAEdnI,GACFmI,EAAYpL,KAAKC,MAAMmL,EAAalC,EAAW,CAACjG,KAGlDmI,EAAYpL,KAAKmL,GAEbnF,GACFoF,EAAYpL,KAAKC,MAAMmL,EAAalC,EAAW,CAAClD,KAG7B,iBAAVxC,EACT/B,EAAO0E,OAAOlG,MAAMwB,EAAQ,CAACgB,EAAG,GAAG4I,OAAOD,IAE1C5H,EAAM7B,QAAUyJ,QAGX5H,EAAM7B,SAGbuH,EAAW1F,EAAM7B,SAIvB,OAAOF,EAGTyH,CAAWnF,EAAItC,aArHvB,CAyHGH,GAIH,SAAWA,GACTA,EAAMoB,UAAU4I,WAAa,CAC3B,QAAW,oBACX,UAAa,CACXzG,QAAS,qBACTjD,MAAO,eAET,OAAU,mCACV,OAAU,iEACV,QAAW,qBACX,MAAS,CACPiD,QAAS,gDACTC,YAAY,EACZlD,MAAO,WAET,SAAY,CACViD,QAAS,aACT7B,OAAQ,CACNuI,YAAa,QACbxD,SAAU,YAGd,YAAe,qCACf,SAAY,wCAEdzG,EAAM2C,MAAMmC,IAAI,mBAAmB,SAAUrC,GAE3CzC,EAAMoB,UAAU,qBAAqBgI,kBAAkB3G,EAAK,aADpC,6CAG1BzC,EAAM2C,MAAMmC,IAAI,kBAAkB,SAAUrC,GAC1CzC,EAAMoB,UAAU,qBAAqBqI,qBAAqBhH,EAAK,iBA9BnE,CAgCGzC,GAKHA,EAAMoB,UAAU8I,KAAO,CACrB,SAAY,CACV3G,QAAS,gCACTE,QAAQ,GAEV,OAAU,CACRF,QAAS,gCACTE,QAAQ,GAEV,QAAW,CACTF,QAAS,gCACTE,QAAQ,GAEV,OAAU,qCACV,YAAe,WACf,SAAY,IACZ,QAAW,qBACX,KAAQ,CACNF,QAAS,WACTjD,MAAO,YAGXN,EAAMoB,UAAU+I,YAAcnK,EAAMoB,UAAU8I,KAW9ClK,EAAMoB,UAAUgJ,KAAOpK,EAAMoB,UAAUC,OAAO,MAAO,CACnD,QAAW,CAAC,mBAAoB,CAC9BkC,QAAS,kBACTC,YAAY,IAEd,OAAU,CACRD,QAAS,0EACT7B,OAAQ,CACN,YAAe,UAInB,SAAY,CACV6B,QAAS,0GACT7B,OAAQ,CAEN,SAAY,aAGhB,SAAY,2CACZ,SAAY,aAEd1B,EAAMoB,UAAUK,aAAa,OAAQ,WAAY,CAC/C,SAAY,CACZ,CACE8B,QAAS,cACT7B,OAAQ,CACN,YAAe,MAGnB,aACA,cAAe,CACb6B,QAAS,sCACTC,YAAY,EACZlD,MAAO,cAKXN,EAAMoB,UAAUiJ,SAAW,CACzB,QAAW,CACT9G,QAAS,6CACTC,YAAY,GAEd,OAAU,CACRD,QAAS,iDACTE,QAAQ,GAGV,QAAW,gCAEX,OAAU,CACRF,QAAS,8CACT7B,OAAQ,CACN,SAAY,wCAGhB,SAAY,wDACZ,QAAW,CACX,6HACA,CACE6B,QAAS,wQACTC,YAAY,IAEd,SAAY,uBACZ,YAAe,YAIjB,SAAWxD,GAET,IAAIsK,EAAQ,6CAA6CxG,OAYzD,SAASyG,EAAahH,GAIpB,OAHAA,EAAUA,EAAQ/C,QAAQ,YAAY,WACpC,OAAO8J,KAEFzG,OAAO,0BAA0BC,OAAS,MAAQP,EAAU,KAGrE,IAAIiH,EAAY,4DAA4D1G,OACxE2G,EAAW,+CAA+C3G,OAAOtD,QAAQ,OAAO,WAClF,OAAOgK,KAELE,EAAY,sEAAsE5G,OACtF9D,EAAMoB,UAAU4H,SAAWhJ,EAAMoB,UAAUC,OAAO,SAAU,IAC5DrB,EAAMoB,UAAUK,aAAa,WAAY,SAAU,CACjD,qBAAsB,CACpB8B,QAAS,kDACTC,YAAY,EACZC,QAAQ,EACR/B,OAAQ,CACN,YAAe,YACf,cAAe,CACb6B,QAAS,iBACTjD,MAAO,CAAC,OAAQ,iBAChBoB,OAAQ1B,EAAMoB,UAAUuJ,QAI9B,WAAc,CAEZpH,QAAS,kBACTjD,MAAO,eAET,MAAS,CACPiD,QAASM,OAAO,IAAM4G,EAAWC,EAAY,MAAQD,EAAW,KAAM,KACtE/I,OAAQ,CACN,kBAAmB,CACjB6B,QAASM,OAAO,KAAO4G,EAAWC,EAAY,OAASD,EAAW,OAClEjH,YAAY,EACZ9B,OAAQ,CACN,aAAc,CACZ6B,QAASM,OAAO2G,GAChB9I,OAAQ1B,EAAMoB,UAAU4H,UAE1B,YAAe,OAGnB,aAAc,CACZzF,QAASM,OAAO,KAAO4G,EAAW,IAAMC,EAAY,KACpDlH,YAAY,EACZ9B,OAAQ,CACN,YAAe,iBAGnB,mBAAoB,CAClB6B,QAASM,OAAO,IAAM4G,EAAW,KACjC/I,OAAQ,CACN,eAAgB,CACd6B,QAASM,OAAO2G,GAChBlK,MAAO,YACPoB,OAAQ1B,EAAMoB,UAAU4H,UAE1B,YAAe,SAKvB,KAAQ,CAAC,CAEPzF,QAAS,uFACTC,YAAY,EACZlD,MAAO,WACN,CAGDiD,QAAS,sBACTjD,MAAO,WACN,CAIDiD,QAAS,qBACTE,QAAQ,EACR/B,OAAQ,CACN,aAAc,CACZ6B,QAAS,qDACTC,YAAY,GAEd,gBAAiB,CACfD,QAAS,WACTC,YAAY,GAEd,YAAe,SAGnB,MAAS,CAAC,CAKRD,QAAS,0CACTjD,MAAO,YACPoB,OAAQ,CACNuI,YAAa,cAEd,CAGD1G,QAAS,aACTC,YAAY,EACZlD,MAAO,YACPoB,OAAQ,CACNuI,YAAa,aAGjB,GAAM,CAKJ1G,QAAS,wCACTC,YAAY,EACZlD,MAAO,eAET,KAAQ,CAKNiD,QAAS,mCACTC,YAAY,EACZlD,MAAO,eAET,gBAAiB,CAKfiD,QAAS,qHACT7B,OAAQ,CACN,SAAY,CACV6B,QAAS,gBACTC,YAAY,GAEd,OAAU,+DACV,YAAe,kBAEjBlD,MAAO,OAET,KAAQ,CAINiD,QAASgH,EAAa,kGAAkGzG,QACxHN,YAAY,EACZC,QAAQ,EACR/B,OAAQ,CACN,QAAW,CACT6B,QAAS,sBACTC,YAAY,EACZ9B,OAAQ,IAGV,YAAe,YAGnB,OAAU,CAIR6B,QAASgH,EAAa,kGAAkGzG,QACxHN,YAAY,EACZC,QAAQ,EACR/B,OAAQ,CACN,QAAW,CACT6B,QAAS,oBACTC,YAAY,EACZ9B,OAAQ,IAGV,YAAe,SAGnB,OAAU,CAGR6B,QAASgH,EAAa,4BAA4BzG,QAClDN,YAAY,EACZC,QAAQ,EACR/B,OAAQ,CACN,QAAW,CACT6B,QAAS,uBACTC,YAAY,EACZ9B,OAAQ,IAGV,YAAe,QAGnB,IAAO,CAIL6B,QAASgH,EAAa,mGAAmGzG,QACzHN,YAAY,EACZC,QAAQ,EACR/B,OAAQ,CACN,SAAY,KACZ,QAAW,CACT6B,QAAS,oBACTC,YAAY,EACZ9B,OAAQ,IAGV,SAAY,CACV6B,QAAS,6BACTC,YAAY,GAEd,IAAO,CACLD,QAAS,iBACTC,YAAY,GAEd,OAAU,CACRD,QAAS,oCACTC,YAAY,OAKpB,CAAC,MAAO,OAAQ,SAAU,UAAUvC,SAAQ,SAAUiB,GACpD,CAAC,MAAO,OAAQ,SAAU,UAAUjB,SAAQ,SAAUS,GAChDQ,IAAUR,IACZ1B,EAAMoB,UAAU4H,SAAS9G,GAAOR,OAAOrB,QAAQqB,OAAOA,GAAU1B,EAAMoB,UAAU4H,SAAStH,UAI/F1B,EAAM2C,MAAMmC,IAAI,kBAAkB,SAAUrC,GACrB,aAAjBA,EAAID,UAA4C,OAAjBC,EAAID,UAIvC,SAASoF,EAAWzH,GAClB,GAAKA,GAA4B,iBAAXA,EAItB,IAAK,IAAIgB,EAAI,EAAGyJ,EAAIzK,EAAO4B,OAAQZ,EAAIyJ,EAAGzJ,IAAK,CAC7C,IAAIe,EAAQ/B,EAAOgB,GAEnB,GAAmB,SAAfe,EAAM9B,KAAV,CAmBA,IAAIyK,EAAW3I,EAAM7B,QAAQ,GACzByK,EAAY5I,EAAM7B,QAAQ,GAE9B,GAAIwK,GAAYC,GAA+B,kBAAlBD,EAASzK,MAA+C,eAAnB0K,EAAU1K,MAAqD,iBAArByK,EAASxK,QAAsB,CAGzI,IAAImB,EAAOqJ,EAASxK,QAAQG,QAAQ,OAAQ,SAASA,QAAQ,UAAW,MAGpEF,EAAQ,aADZkB,GAAQ,eAAe0C,KAAK1C,IAAS,CAAC,KAAK,GAAGuJ,eAGzCD,EAAUxK,MAEuB,iBAApBwK,EAAUxK,MAC1BwK,EAAUxK,MAAQ,CAACwK,EAAUxK,MAAOA,GAEpCwK,EAAUxK,MAAM5B,KAAK4B,GAJrBwK,EAAUxK,MAAQ,CAACA,SA9BrBsH,EAAW1F,EAAM7B,UAwCvBuH,CAAWnF,EAAItC,WAEjBH,EAAM2C,MAAMmC,IAAI,QAAQ,SAAUrC,GAChC,GAAiB,eAAbA,EAAIrC,KAAR,CAMA,IAFA,IAAIyK,EAAW,GAEN1J,EAAI,EAAGyJ,EAAInI,EAAI6C,QAAQvD,OAAQZ,EAAIyJ,EAAGzJ,IAAK,CAClD,IAAI6J,EAAMvI,EAAI6C,QAAQnE,GAClBV,EAAQ,gBAAgByD,KAAK8G,GAEjC,GAAIvK,EAAO,CACToK,EAAWpK,EAAM,GACjB,OAIJ,IAAIqB,EAAU9B,EAAMoB,UAAUyJ,GAE9B,GAAK/I,EAYE,CAEL,IAAIY,EAAOD,EAAIpC,QAAQG,QAAQ,QAAS,KAAKA,QAAQ,SAAU,KAC/DiC,EAAIpC,QAAUL,EAAMsC,UAAUI,EAAMZ,EAAS+I,QAd7C,GAAIA,GAAyB,SAAbA,GAAuB7K,EAAMqC,QAAQ4I,WAAY,CAC/D,IAAI3J,EAAK,OAAQ,IAAI4J,MAAOhN,UAAY,IAAMiN,KAAKC,MAAsB,KAAhBD,KAAKE,UAC9D5I,EAAI8C,WAAe,GAAIjE,EACvBtB,EAAMqC,QAAQ4I,WAAWK,cAAcT,GAAU,WAC/C,IAAIU,EAAMC,SAASC,eAAenK,GAE9BiK,IACFA,EAAIG,UAAY1L,EAAMsC,UAAUiJ,EAAII,YAAa3L,EAAMoB,UAAUyJ,GAAWA,YAUtF7K,EAAMoB,UAAUwK,GAAK5L,EAAMoB,UAAU4H,SAtVvC,CAuVGhJ,GAIHA,EAAMoB,UAAUyK,WAAa7L,EAAMoB,UAAUC,OAAO,IAAK,CACvD,OAAU,qFACV,QAAW,wYACX,SAAY,iEAEPrB,EAAMoB,UAAUyK,WAAW,cAClC7L,EAAMoB,UAAU0K,KAAO9L,EAAMoB,UAAUyK,WAGvC7L,EAAMoB,UAAU2K,MAAQ,CACtB,QAAW,mBACX,OAAU,CAAC,CACTxI,QAAS,wBACTE,QAAQ,GACP,CACDF,QAAS,qDACTE,QAAQ,IAEV,OAAU,6EACV,UAAa,CACXF,QAAS,SACTjD,MAAO,aAET,MAAS,CACPiD,QAAS,SACTjD,MAAO,YAET,gBAAiB,CACfiD,QAAS,SACTjD,MAAO,YAET,QAAW,CACTiD,QAAS,OACTjD,MAAO,YAET,OAAU,CACRiD,QAAS,aACTjD,MAAO,YAIT,QAAW,gSACX,QAAW,qBAEX,SAAY,8FACZ,YAAe,yBAIjBN,EAAMoB,UAAU4K,OAAS,CACvB,QAAW,CACTzI,QAAS,eACTC,YAAY,GAEd,uBAAwB,CACtBD,QAAS,sEACTE,QAAQ,EACR/B,OAAQ,CACN,cAAiB,CAEf6B,QAAS,2EACTC,YAAY,EACZ9B,OAAQ,CACN,cAAe,CACb6B,QAAS,qBACTC,YAAY,GAEd,oBAAqB,CACnBD,QAAS,kBACTjD,MAAO,eAET0E,KAAM,OAGV,OAAU,YAGd,uBAAwB,CACtBzB,QAAS,uCACTE,QAAQ,EACRnD,MAAO,UAET,OAAU,CACRiD,QAAS,mDACTE,QAAQ,GAEV,SAAY,CACVF,QAAS,4CACTC,YAAY,GAEd,aAAc,CACZD,QAAS,mBACTC,YAAY,GAEd,UAAa,CACXD,QAAS,yBACTC,YAAY,EACZlD,MAAO,CAAC,aAAc,eACtBoB,OAAQ,CACN,YAAe,OAGnB,QAAW,mMACX,QAAW,shBACX,QAAW,0BACX,OAAU,iGACV,SAAY,oDACZ,YAAe,iBAEjB1B,EAAMoB,UAAU4K,OAAO,wBAAwBtK,OAAsB,cAAEA,OAAOsD,KAAOhF,EAAMoB,UAAU4K,OACrGhM,EAAMoB,UAAU6K,GAAKjM,EAAMoB,UAAU4K,OAGrChM,EAAMoB,UAAU8K,OAASlM,EAAMoB,UAAUC,OAAO,QAAS,CACvD,OAAU,CACRkC,QAAS,sCACTE,QAAQ,GAGV,aAAc,aACd,QAAW,4RACX,SAAY,wGAEdzD,EAAMoB,UAAUK,aAAa,SAAU,aAAc,CACnD,UAAa,CACX8B,QAAS,gEACTjD,MAAO,UAET,YAAe,CAEbiD,QAAS,wBACTjD,MAAO,YAET,MAAS,CACPiD,QAAS,mBACTjD,MAAO,mBAIJN,EAAMoB,UAAU8K,OAAOC,SAG9B,SAAWnM,GACTA,EAAMoB,UAAUgL,KAAOpM,EAAMoB,UAAUC,OAAO,MAAO,CAEnD,QAAW,CACTkC,QAAS,gDACTC,YAAY,KAGhBxD,EAAMoB,UAAUK,aAAa,OAAQ,SAAU,CAE7C,cAAe,CAEb8B,QAAS,sBACT7B,OAAQ,CACN,OAAU,+BAIT1B,EAAMoB,UAAUgL,KAAKC,OAC5B,IAAI5F,EAAW,yBACX6F,EAAW,CAAC,2CAA4C,CAC1D/I,QAAS,eACTC,YAAY,IAEdxD,EAAMoB,UAAUK,aAAa,OAAQ,WAAY,CAE/C,gBAAiB,CACf8B,QAAS,eACT7B,OAAQ,CACN,YAAe,IACf,SAAY+E,EACZ,SAAY6F,IAIhB,gBAAiB,CACf/I,QAAS,qCACT7B,OAAQ,CACN,SAAY,CAAC,kBAAmB,CAC9B6B,QAAS,aACTC,YAAY,IAEd,YAAe,IACf,SAAYiD,EACZ,SAAY6F,EACZ,UAAatM,EAAMoB,UAAUgL,KAAKG,qBAIjCvM,EAAMoB,UAAUgL,KAAKI,gBACrBxM,EAAMoB,UAAUgL,KAAKG,UAG5BvM,EAAMoB,UAAUK,aAAa,OAAQ,cAAe,CAClD,SAAY,CACV8B,QAAS,uHACTC,YAAY,KAxDlB,CA2DGxD,GAIHA,EAAMoB,UAAUqL,KAAOzM,EAAMoB,UAAUC,OAAO,MAAO,CACnD,QAAW,CACTkC,QAAS,uCACTC,YAAY,GAEd,OAAU,CACRD,QAAS,sDACT7B,OAAQ,CACN,KAAQ,YAKZ,IAAO,0BAQP,SAAY,CAEV6B,QAAS,mGACT7B,OAAQ,CACN,OAAU,CACR6B,QAAS,IACTjD,MAAO,aAET,YAAe,UACf,SAAY,2BAGhB,SAAY,CACViD,QAAS,2CACT7B,OAAQ,CACN,SAAY,6BAIlB1B,EAAMoB,UAAUK,aAAa,OAAQ,SAAU,CAC7C,QAAW,CAAC,oHAAqH,CAC/H8B,QAAS,4BACTC,YAAY,MAGhBxD,EAAMoB,UAAUK,aAAa,OAAQ,YAAa,CAEhD,SAAY,2BAEdzB,EAAMoB,UAAUK,aAAa,OAAQ,WAAY,CAC/C,kBAAmB,CACjB8B,QAAS,6BACTjD,MAAO,WAET,YAAe,CACbiD,QAAS,UACTjD,MAAO,YAET,UAAa,CACXiD,QAAS,6BACTjD,MAAO,WAET,QAAW,qBACX,KAAQ,CACNiD,QAAS,WACTjD,MAAO,WAET,SAAY,CACViD,QAAS,kDACTC,YAAY,KAGhBxD,EAAMoB,UAAUqL,KAAa,OAAE/K,OAAOsD,KAAOhF,EAAMoB,UAAUqL,KAG7DzM,EAAMoB,UAAUsL,IAAM,CACpB,QAAW,CACTnJ,QAAS,gDACTC,YAAY,GAEd,SAAY,CAAC,CACXD,QAAS,sCACTE,QAAQ,GACP,YACH,OAAU,CACRF,QAAS,kDACTE,QAAQ,EACRD,YAAY,GAEd,SAAY,4FAEZ,QAAW,u9EACX,QAAW,2BACX,OAAU,4CACV,SAAY,yHACZ,YAAe,eAIjB,SAAWxD,GACT,IAAIqH,EAAO,CACT9D,QAAS,sBACTC,YAAY,GAGV8D,EAAS,CACX/D,QAAS,uCACTC,YAAY,GAEV9B,EAAS,CACX,QAAW,CACT6B,QAAS,uCACTC,YAAY,GAEd,IAAO,CACLD,QAAS,uBACTE,QAAQ,GAEV,OAAU,CACRF,QAAS,gDACTE,QAAQ,GAEV,cAAiB,KAEjB,KAAQ,KAER,UAAa,+BACb,QAAW,CACTF,QAAS,4DACTC,YAAY,GAEd,QAAW,iBACX,MAAS,CAAC,q5CAAs5C,CAC95CD,QAAS,4JACT7B,OAAQ,CACN,KAAQ2F,EACR,OAAUC,EACV,SAAY,eACZ,YAAe,WAGnB,OAAU,kBACV,KAAQD,EACR,QAAW,qBACX,SAAY,CAEZ,wGACA,OAAUC,EACV,YAAe,iBAEjB5F,EAAsB,cAAI,CACxB6B,QAAS,iBACTjD,MAAO,WACPoB,OAAQ,CACN,UAAa,CACX6B,QAAS,QACTjD,MAAO,eAET0E,KAAMtD,IAGVA,EAAa,KAAI,CACf6B,QAAS,oBACT7B,OAAQ,CACN,SAAY,SACZsD,KAAMtD,IAGV1B,EAAMoB,UAAUuL,OAAS,CACvB,qBAAsB,CACpBpJ,QAAS,aACTC,YAAY,EACZ9B,OAAQ,CACN,OAAU,WACVsD,KAAMtD,IAGV,uBAAwB,CACtB6B,QAAS,qDACTC,YAAY,EACZ9B,OAAQ,CACN,SAAY,OACZsD,KAAMtD,IAGV,UAAa,CACX6B,QAAS,iDACTC,YAAY,EACZ9B,OAAQ,CACN,QAAW,OACXsD,KAAMtD,IAKV,uBAAwB,CACtB6B,QAAS,kIACTC,YAAY,EACZ9B,OAAQ,CACN,SAAY,CACV6B,QAAS,WACT7B,OAAQ,CACN,cAAiBA,EAAO4G,gBAG5BtD,KAAMtD,IAMV,SAAY,CACV6B,QAAS,yOACTC,YAAY,EACZ9B,OAAQ,CACN,cAAiBA,EAAO4G,cACxB,QAAW5G,EAAO2G,QAClB,YAAe,UAGnB,KAAQ3G,EAAOkL,KACf,OAAUlL,EAAOsF,OACjB,QAAW,CACTzD,QAAS,uCACTC,YAAY,EACZC,QAAQ,GAEV,cAAiB/B,EAAO4G,cACxB,YAAe,iBAjInB,CAmIGtI,GAIH,SAAWA,GACTA,EAAMoB,UAAUyL,WAAa7M,EAAMoB,UAAUC,OAAO,aAAc,CAChE,aAAc,CACZkC,QAAS,+KACTC,YAAY,EACZC,QAAQ,EACR/B,OAAQ,MAIV,QAAW,6ZACX,QAAW,iGAGN1B,EAAMoB,UAAUyL,WAAsB,UAE7C,IAAIC,EAAa9M,EAAMoB,UAAUC,OAAO,aAAc,WAC/CyL,EAAW,cAClB9M,EAAMoB,UAAUyL,WAAW,cAAcnL,OAASoL,EAClD9M,EAAMoB,UAAUK,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAElB8B,QAAS,yGACTE,QAAQ,EACR/B,OAAQ,CACN,SAAY,4DACZ,QAAW,CACT6B,QAAS,WAETjD,MAAO,aACPoB,OAAQoL,OAKhB9M,EAAMoB,UAAU2L,GAAK/M,EAAMoB,UAAUyL,WAnCvC,CAoCG7M,GAIH,SAAWA,GACT,IAAI6M,EAAa7M,EAAMC,KAAKY,MAAMb,EAAMoB,UAAUyL,YAClD7M,EAAMoB,UAAU4L,IAAMhN,EAAMoB,UAAUC,OAAO,MAAOwL,GAIpD,IAAIxH,EAAMrF,EAAMoB,UAAU4L,IAAI3H,IAC9BA,EAAI9B,QAAUM,OAAO,qBAAqBC,OAAS,MAAQuB,EAAI9B,QAAQO,OAAS,IAAKuB,EAAI9B,QAAQK,OACjGyB,EAAI7B,YAAa,EARnB,CASGxD,GAIHA,EAAMoB,UAAU6L,KAAO,CACrB,QAAW,CAAC,iBAAkB,CAC5B1J,QAAS,OACTE,QAAQ,IAEV,OAAU,CACRF,QAAS,yBACTE,QAAQ,GAEV,QAAW,CAAC,CACVF,QAAS,sBACT7B,OAAQ,CACN,SAAY,MAEb,CACD6B,QAAS,ibACT7B,OAAQ,CACN,YAAe,OAEhB,4QACH,SAAY,oCACZ,OAAU,kNACV,YAAe,QAIjB,SAAW1B,GAGT,IAAIkN,EAAgB,mBAEhB7H,EAAM,mFAEN8H,EAAa,MAAQ9H,EAAIvB,OAAS,YAAcoJ,EAAcpJ,OAAS,MAAQoJ,EAAcpJ,OAAS,YAAcuB,EAAIvB,OAAS,MAIjIsJ,EAAW,kJAAkJtJ,OAAOtD,QAAQ,YAAY,WAC1L,MAAO,2EAA2EsD,UAEhFkD,EAAS,8CAA8ClD,OAQ3D,SAASuJ,EAAmBjQ,EAAOwG,GACjCA,GAASA,GAAS,IAAIpD,QAAQ,KAAM,IAAM,IAE1C,IAAI+C,EAAU,uFAAuFO,OAAOtD,QAAQ,aAAa,WAC/H,OAAO2M,KACN3M,QAAQ,cAAc,WACvB,OAAOpD,KAET,OAAOyG,OAAON,EAASK,GAGzB5D,EAAMoB,UAAUuJ,KAAO,CACrB,OAAU,CACRpH,QAASM,OAAO,6FAA6FC,OAAOtD,QAAQ,aAAa,WACvI,OAAO2M,MAET3J,YAAY,EACZlD,MAAO,UAET,QAAW,MACX,IAAO,CACLiD,QAASM,OAAO,kEAAkEC,OAAOtD,QAAQ,aAAa,WAC5G,OAAO2M,KACN3M,QAAQ,YAAY,WACrB,MAAO,MAAQ4M,EAAW,IAAMpG,EAAS,QAE3CxD,YAAY,EACZC,QAAQ,EACRnD,MAAO,UAET,UAAa,CACXiD,QAAS,gBACTC,YAAY,EACZlD,MAAO,aAET,SAAY,CACViD,QAAS8J,EAAmB,sJAAsJvJ,QAClLN,YAAY,EACZlD,MAAO,UAET,QAAW,CACTiD,QAAS8J,EAAmB,aAAavJ,OAAQ,KACjDN,YAAY,EACZlD,MAAO,aAET,KAAQ,CACNiD,QAAS8J,EAAmB,SAASvJ,OAAQ,KAC7CN,YAAY,EACZlD,MAAO,aAET,OAAU,CACRiD,QAAS8J,EAAmBrG,GAC5BxD,YAAY,EACZC,QAAQ,GAEV,OAAU,CACRF,QAAS8J,EAAmB,kFAAkFvJ,OAAQ,KACtHN,YAAY,GAEd,IAAO6B,EACP,UAAa6H,EACb,YAAe,6BAEjBlN,EAAMoB,UAAUkM,IAAMtN,EAAMoB,UAAUuJ,KArFxC,CAsFG3K,GAEH,IClvFIuN,EAAe,CAEjBvN,MDgvFF,EC/uFEwN,MCHU,CACVC,MAAO,CACLC,gBAAiB,UACjBC,MAAO,WAETC,OAAQ,CAAC,CACPC,MAAO,CAAC,UAAW,SAAU,UAAW,QAAS,eACjDC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,aACRC,MAAO,CACLC,QAAS,KAEV,CACDF,MAAO,CAAC,MAAO,WAAY,UAC3BC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,WAAY,YACpBC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,SAAU,WAAY,aAC9BC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,aACRC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,UAAW,SAAU,SAAU,MAAO,aAAc,UAAW,UAAW,YAAa,OAAQ,YAAa,QAAS,UAAW,cAAe,YACvJC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,WACRC,MAAO,CACLE,mBAAoB,iBAErB,CACDH,MAAO,CAAC,YACRC,MAAO,CACLE,mBAAoB,cAErB,CACDH,MAAO,CAAC,UACRC,MAAO,CACLG,UAAW,WAEZ,CACDJ,MAAO,CAAC,YAAa,QACrBC,MAAO,CACLI,WAAY,SAEb,CACDL,MAAO,CAAC,aACRC,MAAO,CACLH,MAAO,eDzDb,SAASQ,EAAgBxN,EAAKI,EAAK3D,GAYjC,OAXI2D,KAAOJ,EACT1D,OAAO2D,eAAeD,EAAKI,EAAK,CAC9B3D,MAAOA,EACPwC,YAAY,EACZtC,cAAc,EACdD,UAAU,IAGZsD,EAAII,GAAO3D,EAGNuD,EAGT,SAASyN,IAeP,OAdAA,EAAWnR,OAAOoR,QAAU,SAAUjL,GACpC,IAAK,IAAIjC,EAAI,EAAGA,EAAIpC,UAAUgD,OAAQZ,IAAK,CACzC,IAAI2C,EAAS/E,UAAUoC,GAEvB,IAAK,IAAIJ,KAAO+C,EACV7G,OAAOD,UAAUgE,eAAe7C,KAAK2F,EAAQ/C,KAC/CqC,EAAOrC,GAAO+C,EAAO/C,IAK3B,OAAOqC,IAGOzE,MAAMgB,KAAMZ,WAG9B,IAAIuP,EAAY,aAEZC,EAAsB,SAA6BC,GACjC,IAAhBA,EAAKzM,OACPyM,EAAK9P,KAAK,CACRmP,MAAO,CAAC,SACRxN,QAAS,KACToO,OAAO,IAEgB,IAAhBD,EAAKzM,QAAoC,KAApByM,EAAK,GAAGnO,UACtCmO,EAAK,GAAGnO,QAAU,KAClBmO,EAAK,GAAGC,OAAQ,IAIhBC,EAAc,SAAqBb,EAAO/I,GAC5C,IAAI6J,EAAYd,EAAM9L,OAEtB,OAAI4M,EAAY,GAAKd,EAAMc,EAAY,KAAO7J,EACrC+I,EAGFA,EAAM9D,OAAOjF,IA+ElB8J,EAAc,SAAqBpB,EAAOhL,GAC5C,IAAIiL,EAAQD,EAAMC,MAEdoB,EAAO5R,OAAOC,OAAO,MACrB4R,EAAYtB,EAAMI,OAAOmB,QAAO,SAAUC,EAAKC,GACjD,IAAI7N,EAAY6N,EAAW7N,UACvB0M,EAAQmB,EAAWnB,MAEvB,OAAI1M,IAAcA,EAAU8N,SAAS1M,IAIrCyM,EAAWpB,MAAM5M,SAAQ,SAAUb,GAEjC,IAAI+O,EAAWf,EAAS,GAAIY,EAAI5O,GAAO0N,GAEvCkB,EAAI5O,GAAQ+O,KAPLH,IAURH,GAOH,OALAC,EAAUjN,KAAO4L,EAEjBqB,EAAUrB,MAAQW,EAAS,GAAIX,EAAO,CACpCC,gBAAiB,OAEZoB,GAGT,SAASM,EAAwBzO,EAAK0O,GACpC,IAAIjM,EAAS,GAEb,IAAK,IAAIiB,KAAK1D,EACR1D,OAAOD,UAAUgE,eAAe7C,KAAKwC,EAAK0D,KAA8B,IAAxBgL,EAAQ/P,QAAQ+E,KAAWjB,EAAOiB,GAAK1D,EAAI0D,IAGjG,OAAOjB,EAGT,IAyJA,EAzJ6B,SAAUkM,GACrC,SAASC,IAKP,IAJA,IAAIC,EAAS7P,KACTpB,EAAO,GACPgG,EAAMxF,UAAUgD,OAEbwC,KACLhG,EAAKgG,GAAOxF,UAAUwF,GAGxB+K,EAAU3Q,MAAMgB,KAAMpB,GAEtB4P,EAAgBxO,KAAM,gBAAgB,SAAU8P,GAC9C,QAAyBtQ,IAArBqQ,EAAOV,WAA2BW,EAAMjC,QAAUgC,EAAOE,WAAaD,EAAMjN,WAAagN,EAAOG,aAClG,OAAOH,EAAOV,UAGhBU,EAAOE,UAAYD,EAAMjC,MACzBgC,EAAOG,aAAeF,EAAMjN,SAC5B,IAAIsM,EAAYW,EAAMjC,MAAQoB,EAAYa,EAAMjC,MAAOiC,EAAMjN,eAAYrD,EACzE,OAAOqQ,EAAOV,UAAYA,KAG5BX,EAAgBxO,KAAM,gBAAgB,SAAUiQ,GAC9C,IAAI7O,EAAM6O,EAAI7O,IACV8O,EAAYD,EAAIC,UAChB/B,EAAQ8B,EAAI9B,MAIZgC,EAAS1B,EAAS,GAHTgB,EAAwBQ,EAAK,CAAC,MAAO,YAAa,QAAS,SAGxC,CAC9BC,UAAW,aACX/B,WAAO3O,EACP4B,SAAK5B,IAGH2P,EAAYU,EAAOO,aAAaP,EAAOC,OAkB3C,YAhBkBtQ,IAAd2P,IACFgB,EAAOhC,MAAQgB,EAAUrB,YAGbtO,IAAV2O,IACFgC,EAAOhC,WAAyB3O,IAAjB2Q,EAAOhC,MAAsBM,EAAS,GAAI0B,EAAOhC,MAAOA,GAASA,QAGtE3O,IAAR4B,IACF+O,EAAO/O,IAAMA,GAGX8O,IACFC,EAAOD,WAAa,IAAMA,GAGrBC,KAGT3B,EAAgBxO,KAAM,oBAAoB,SAAUiQ,GAClD,IAAI/B,EAAQ+B,EAAI/B,MACZY,EAAQmB,EAAInB,MACZE,EAAYd,EAAM9L,OAClB+M,EAAYU,EAAOO,aAAaP,EAAOC,OAE3C,QAAkBtQ,IAAd2P,EAAJ,CAEO,GAAkB,IAAdH,GAAgC,UAAbd,EAAM,GAClC,OAAOY,EAAQ,CACbuB,QAAS,qBACP7Q,EACC,GAAkB,IAAdwP,IAAoBF,EAC7B,OAAOK,EAAUjB,EAAM,IAGzB,IAAIoC,EAAYxB,EAAQ,CACtBuB,QAAS,gBACP,GAEAE,EAAarC,EAAMtN,KAAI,SAAUH,GACnC,OAAO0O,EAAU1O,MAEnB,OAAOnD,OAAOoR,OAAO1P,MAAM1B,OAAQ,CAACgT,GAAWlG,OAAOmG,QAGxD/B,EAAgBxO,KAAM,iBAAiB,SAAUiQ,GAC/C,IAAI7O,EAAM6O,EAAI7O,IACV8O,EAAYD,EAAIC,UAChB/B,EAAQ8B,EAAI9B,MACZ5L,EAAQ0N,EAAI1N,MAIZ4N,EAAS1B,EAAS,GAHTgB,EAAwBQ,EAAK,CAAC,MAAO,YAAa,QAAS,UAGxC,CAC9BC,UAAW,SAAW3N,EAAM2L,MAAMzI,KAAK,KACvC+K,SAAUjO,EAAM7B,QAChByN,MAAO0B,EAAOY,iBAAiBlO,GAC/BnB,SAAK5B,IAeP,YAZcA,IAAV2O,IACFgC,EAAOhC,WAAyB3O,IAAjB2Q,EAAOhC,MAAsBM,EAAS,GAAI0B,EAAOhC,MAAOA,GAASA,QAGtE3O,IAAR4B,IACF+O,EAAO/O,IAAMA,GAGX8O,IACFC,EAAOD,WAAa,IAAMA,GAGrBC,KAGT3B,EAAgBxO,KAAM,YAAY,SAAUK,EAAO0C,EAAMZ,EAASU,GAChE,IAAIC,EAAM,CACRC,KAAMA,EACNZ,QAASA,EACTU,SAAUA,EACVrC,OAAQ,IAEVH,EAAM2C,MAAMC,IAAI,kBAAmBH,GACnC,IAAItC,EAASsC,EAAItC,OAASH,EAAM6C,SAASJ,EAAIC,KAAMD,EAAIX,QAASW,EAAID,UAEpE,OADAxC,EAAM2C,MAAMC,IAAI,iBAAkBH,GAC3BtC,KA2BX,OAvBImP,IAAWC,EAAU5R,UAAY2R,GACrCC,EAAUvS,UAAYC,OAAOC,OAAOoS,GAAaA,EAAUtS,WAC3DuS,EAAUvS,UAAUG,YAAcoS,EAElCA,EAAUvS,UAAUqT,OAAS,WAC3B,IAAIT,EAAMjQ,KAAK8P,MACXzP,EAAQ4P,EAAI5P,MACZwC,EAAWoN,EAAIpN,SACfE,EAAOkN,EAAIlN,KACXyN,EAAWP,EAAIO,SACfrB,EAAYnP,KAAKoQ,aAAapQ,KAAK8P,OACnC3N,EAAU9B,EAAMoB,UAAUoB,GAG9B,OAAO2N,EAAS,CACdhQ,OA3PgB,SAAyBA,GAU7C,IATA,IAAImQ,EAAe,CAAC,IAChBC,EAAgB,CAACpQ,GACjBqQ,EAAqB,CAAC,GACtBC,EAAoB,CAACtQ,EAAO4B,QAC5BZ,EAAI,EACJuP,EAAa,EACbC,EAAc,GACd3B,EAAM,CAAC2B,GAEJD,GAAc,GAAG,CACtB,MAAQvP,EAAIqP,EAAmBE,MAAiBD,EAAkBC,IAAa,CAC7E,IAAIrQ,OAAU,EACVwN,EAAQyC,EAAaI,GAErBxO,EADWqO,EAAcG,GACRvP,GAgBrB,GAdqB,iBAAVe,GACT2L,EAAQ6C,EAAa,EAAI7C,EAAQ,CAAC,SAClCxN,EAAU6B,IAEV2L,EAAQa,EAAYb,EAAO3L,EAAM9B,MAE7B8B,EAAM5B,QACRuN,EAAQa,EAAYb,EAAO3L,EAAM5B,QAGnCD,EAAU6B,EAAM7B,SAIK,iBAAZA,EAAX,CAUA,IAAIuQ,EAAkBvQ,EAAQwQ,MAAMvC,GAChCwC,EAAeF,EAAgB7O,OACnC4O,EAAYjS,KAAK,CACfmP,MAAOA,EACPxN,QAASuQ,EAAgB,KAG3B,IAAK,IAAIG,EAAM,EAAGA,EAAMD,EAAcC,IACpCxC,EAAoBoC,GACpB3B,EAAItQ,KAAKiS,EAAc,IACvBA,EAAYjS,KAAK,CACfmP,MAAOA,EACPxN,QAASuQ,EAAgBG,UArB3BL,IACAJ,EAAa5R,KAAKmP,GAClB0C,EAAc7R,KAAK2B,GACnBmQ,EAAmB9R,KAAK,GACxB+R,EAAkB/R,KAAK2B,EAAQ0B,QAuBnC2O,IACAJ,EAAavI,MACbwI,EAAcxI,MACdyI,EAAmBzI,MACnB0I,EAAkB1I,MAIpB,OADAwG,EAAoBoC,GACb3B,EAsLQgC,MADiB7R,IAAZ2C,EAAwBnC,KAAKkD,SAAS7C,EAAO0C,EAAMZ,EAASU,GAAY,CAACE,IAIzFmN,UAAW,uBAAyBrN,EACpCsL,WAAqB3O,IAAd2P,EAA0BA,EAAUjN,KAAO,GAClDoP,aAActR,KAAKsR,aACnBC,cAAevR,KAAKuR,iBAIjB3B,EAtJoB,CAuJ3B,EAAAD,WEvRF,EArDY,CACV7B,MAAO,CACLE,MAAO,UACPD,gBAAiB,WAEnBE,OAAQ,CAAC,CACPC,MAAO,CAAC,SAAU,WAAY,WAC9BC,MAAO,CACLH,MAAO,uBAER,CACDE,MAAO,CAAC,WAAY,YACpBC,MAAO,CACLH,MAAO,sBAER,CACDE,MAAO,CAAC,WACRC,MAAO,CACLH,MAAO,qBAER,CACDE,MAAO,CAAC,WACRC,MAAO,CACLH,MAAO,uBAER,CACDE,MAAO,CAAC,cAAe,UACvBC,MAAO,CACLH,MAAO,uBAER,CACDE,MAAO,CAAC,SAAU,OAAQ,MAAO,YACjCC,MAAO,CACLH,MAAO,uBAER,CACDE,MAAO,CAAC,UAAW,YACnBC,MAAO,CACLH,MAAO,qBACPM,UAAW,WAEZ,CACDJ,MAAO,CAAC,WACRC,MAAO,CACLH,MAAO,sBAER,CACDE,MAAO,CAAC,aACRC,MAAO,CACLH,MAAO,yB,k5CC9Cb,IAAMwD,EAAcC,oBAAH,yDAAGA,CAAH,MAEXC,EAAMD,oBAAH,iDAAGA,CAAH,kHAEI,SAAC9M,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MAChB,SAAChN,GAAD,OAAOA,EAAEkJ,MAAM+D,OAAO,MAC7B,SAACjN,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MAIb,SAAChN,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MAIrCE,EAAOJ,oBAAH,kDAAGA,CAAH,wCAKJK,EAASL,qBAAH,oDAAGA,CAAH,yFAQNM,EAAcN,qBAAH,yDAAGA,CAAH,yB,oBC9BJO,EAAOP,mBAAH,gDAAGA,CAAH,sDACF,SAAC9M,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MAClB,SAAAhN,GAAC,OAAIA,EAAEkJ,MAAM8D,OAAO,MACtB,SAAAhN,GAAC,OAAIA,EAAEkJ,MAAM8D,OAAO,MAGxBM,EAAWR,mBAAH,0DAAGA,CAAH,kJACR,SAAC9M,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MASjB,SAAAhN,GAAC,OAAIA,EAAEkJ,MAAMqE,OAAOC,aACzB,SAACxN,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MCjBtBS,EAAKX,mBAAH,6CAAGA,CAAH,wB,UCAFY,EAAMZ,oBAAH,+CAAGA,CAAH,wBACG,SAAC9M,GAAD,OAAOA,EAAEkJ,MAAM+D,OAAO,MCAnCU,EAAgBb,oBAAH,6DAAGA,CAAH,0CACA,SAAC9M,GAAD,OAAOA,EAAEkJ,MAAM+D,OAAO,MACtB,SAACjN,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,M,UCH5BY,EAAQd,sBAAH,iDAAGA,CAAH,+HACD,SAAC9M,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MACrB,SAAChN,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MACrB,SAAChN,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MACrB,SAAChN,GAAD,OAAOA,EAAEkJ,MAAM8D,OAAO,MAC1B,SAAChN,GAAD,OAAOA,EAAEkJ,MAAMqE,OAAOM,WACnB,SAAC7N,GAAD,OAAOA,EAAEkJ,MAAM+D,OAAO,MACtB,SAAAjN,GAAC,OAAIA,EAAEkJ,MAAM8D,OAAO,M,2CCgBjCc,GAAa,CACjB3T,EAAG4T,IACHC,GAAI,WACF,MAAM,IAAIC,MAAM,0DAElBC,GAAI,SAAC/C,GAAD,OAAW,gBAACgD,EAAA,EAAD,iBAAUhD,EAAV,CAAiBiD,GAAG,SACnCC,GAAI,SAAClD,GAAD,OAAW,gBAACgD,EAAA,EAAD,iBAAUhD,EAAV,CAAiBiD,GAAG,SACnCE,GAAI,SAACnD,GAAD,OAAW,gBAACgD,EAAA,EAAD,iBAAUhD,EAAV,CAAiBiD,GAAG,SACnCG,GAAI,SAACpD,GAAD,OAAW,gBAACgD,EAAA,EAAD,iBAAUhD,EAAV,CAAiBiD,GAAG,SACnCI,GAAI,SAACrD,GAAD,OAAW,gBAACgD,EAAA,EAAD,iBAAUhD,EAAV,CAAiBiD,GAAG,SACnCK,KAAM,SAACtD,GAAD,OAAW,gBAACgD,EAAA,EAAD,iBAAUhD,EAAV,CAAiBiD,GAAG,WACrCpO,EAAG,SAACmL,GAAD,OAAW,gBAACgD,EAAA,EAAD,iBAAUhD,EAAV,CAAiBiD,GAAG,QAClCM,INDkB,SAACvD,GACnB,IACMwD,GADYxD,EAAMU,SAASV,MAAMI,WAAa,IAC1BpP,MAAV,EAAgB,mBAAhB,WAEhB,OACE,gBAAC0Q,EAAD,KACE,gBAAC,EAAD,iBACM5D,EADN,CAEE7K,KAAM+M,EAAMU,SAASV,MAAMU,SAAS+C,OACpC1Q,SACEyQ,GAAWA,EAAQE,QAAUF,EAAQE,OAAO3R,KACxCyR,EAAQE,OAAO3R,KACf,GAENgM,MAAOA,KAEN,gBAAGqC,EAAH,EAAGA,UAAW/B,EAAd,EAAcA,MAAO3N,EAArB,EAAqBA,OAAQ8Q,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,gBAACG,EAAD,CAAKxB,UAAWA,EAAW/B,MAAK,KAAOA,GAASsF,SAAU,GACvDjT,EAAOI,KAAI,SAACiO,EAAMrN,GAAP,OACV,gBAACqQ,EAAD,eAAMzQ,IAAKI,GAAO8P,EAAa,CAAEzC,OAAMzN,IAAKI,KAC1C,gBAACsQ,EAAD,KAAStQ,EAAI,GACb,gBAACuQ,EAAD,KACGlD,EAAKjO,KAAI,SAAC2B,EAAOnB,GAAR,OACR,sCAAMA,IAAKA,GAASmQ,EAAc,CAAEhP,QAAOnB,wBMrB7DsS,GAAI1B,EACJ2B,GAAI1B,EACJ2B,GAAIxB,EACJyB,OAAQC,IACRC,IAAK1B,EACL2B,OFnCoB,SAAClE,GACrB,OACE,gBAACwC,EAAD,KACE,0CAAYxC,EAAZ,CAAmBmE,QAAQ,YEiC/BC,MAAO3B,GAGH4B,GAAQ,6BAyDd,GAxDuB,SAAC,GAA+C,IAAD,IAA5C3D,EAA4C,EAA5CA,SAAU4D,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,SACvCC,IAD4D,gDAC5CF,EAAhBE,aAER,OACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,wBAAM3S,KAAK,OACX,6BAAQyS,EAAYG,OACpB,wBAAMrP,KAAK,cAAc1E,QAAS4T,EAAYI,UAC9C,wBAAMtP,KAAK,kBAAkB1E,QAAQ,cACrC,wBAAM0E,KAAK,eAAe1E,QAAQ,YAClC,wBAAMmM,SAAS,SAASnM,QAAO,GAAKyT,GAAWE,EAASM,WACxD,wBAAM9H,SAAS,UAAUnM,QAAQ,YACjC,wBAAMmM,SAAS,WAAWnM,QAAS4T,EAAYG,QAC/C,wBAAM5H,SAAS,iBAAiBnM,QAAS4T,EAAYI,WACpDJ,SAAA,UAAAA,EAAaM,iBAAb,eAAwBC,YACvB,wBACEhI,SAAS,WACTnM,QAAO,GAAKyT,IAAWG,SAAhB,UAAgBA,EAAaM,iBAA7B,aAAgB,EAAwBC,aAIlDP,EAAYQ,cACX,wBAAM1P,KAAK,WAAW1E,QAAS4T,EAAYQ,gBAI/C,gBAACC,EAAA,EAAD,MAEA,gBAACC,GAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKC,aAAc,GACjB,gBAACC,GAAA,EAAD,CAAMC,eAAe,gBAAgBC,WAAW,UAC9C,2BACE,gBAAC9C,EAAA,EAAD,CAAMjO,GAAG,KACP,gBAAC,MAAD,CAAoBgR,eAAa,IADnC,eAKF,gBAACC,GAAA,EAAD,QAGJ,gBAAC5C,EAAA,EAAD,CAAMC,GAAG,MAAMuB,EAAYG,OAC3B,gBAAC,KAAD,CAAakB,WAAYlD,IAAajC,OAM9C,gBAACoF,EAAA,EAAD","file":"5707d0867a6ada2ed8ab7e4b7198879dd0023e6d-096c14449050f16beb2f.js","sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need anobject and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before. If not provided, the function appends instead.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run(\"before-tokenize\", env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run(\"after-tokenize\", env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {},\n      run: function run(name, env) {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|(?!\\2)[^\\\\`$])*\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'function': /[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, Prism.languages.c['string']],\n      'comment': Prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: Prism.languages.c\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:true|false)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'operator', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(Prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n        lookbehind: true,\n        inside: {\n          'attr-value': {\n            pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n            inside: {\n              'style': {\n                pattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n                lookbehind: true,\n                alias: 'language-css',\n                inside: Prism.languages.css\n              },\n              'punctuation': [{\n                pattern: /^=/,\n                alias: 'attr-equals'\n              }, /\"|'/]\n            }\n          },\n          'attr-name': /^style/i\n        }\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+\\b)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#(?:[\\da-f]{1,2}){3,4}\\b/i,\n      alias: 'color'\n    },\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(Prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-flags': /[a-z]+$/,\n      'regex-delimiter': /^\\/|\\/$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: Prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nPrism.languages.webmanifest = Prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?!\\n|\\r\\n?))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'font-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-objectivec\" */\n\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\nPrism.languages.objc = Prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?[\\d_]+)?)/i,\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'important'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'function'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'variable'\n  },\n  'module': {\n    pattern: /\\b[A-Z]\\w+/,\n    alias: 'variable'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/im,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /url\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n    'keyword': /\\b(?:abstract|as|asserts|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\\b/,\n    'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n  }); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(Prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/true|false/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(Prism);\n\nexport default Prism;","import Prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Original: https://github.com/dracula/visual-studio-code\n// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#F8F8F2\",\n    backgroundColor: \"#282A36\"\n  },\n  styles: [{\n    types: [\"prolog\", \"constant\", \"builtin\"],\n    style: {\n      color: \"rgb(189, 147, 249)\"\n    }\n  }, {\n    types: [\"inserted\", \"function\"],\n    style: {\n      color: \"rgb(80, 250, 123)\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"rgb(255, 85, 85)\"\n    }\n  }, {\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(255, 184, 108)\"\n    }\n  }, {\n    types: [\"punctuation\", \"symbol\"],\n    style: {\n      color: \"rgb(248, 248, 242)\"\n    }\n  }, {\n    types: [\"string\", \"char\", \"tag\", \"selector\"],\n    style: {\n      color: \"rgb(255, 121, 198)\"\n    }\n  }, {\n    types: [\"keyword\", \"variable\"],\n    style: {\n      color: \"rgb(189, 147, 249)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(98, 114, 164)\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"rgb(241, 250, 140)\"\n    }\n  }]\n};\nexport default theme;","import React from \"react\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport theme from \"prism-react-renderer/themes/dracula\";\nimport styled from \"styled-components\";\n\nconst CodeWrapper = styled.div``;\n\nconst Pre = styled.pre`\n  max-width: 100%;\n  padding: ${(p) => p.theme.spaces[3]};\n  border-radius: ${(p) => p.theme.radius[2]};\n  margin: ${(p) => p.theme.spaces[3]} 0;\n  overflow: scroll;\n\n  .token.comment {\n    margin-bottom: ${(p) => p.theme.spaces[3]};\n  }\n`;\n\nconst Line = styled.div`\n  display: table-row;\n  line-height: 1.4;\n`;\n\nconst LineNo = styled.span`\n  display: table-cell;\n  text-align: right;\n  padding-right: 1em;\n  user-select: none;\n  opacity: 0.5;\n`;\n\nconst LineContent = styled.span`\n  display: table-cell;\n`;\n\nexport const Code = (props) => {\n  const className = props.children.props.className || \"\";\n  const matches = className.match(/language-(?<lang>.*)/);\n\n  return (\n    <CodeWrapper>\n      <Highlight\n        {...defaultProps}\n        code={props.children.props.children.trim()}\n        language={\n          matches && matches.groups && matches.groups.lang\n            ? matches.groups.lang\n            : \"\"\n        }\n        theme={theme}\n      >\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\n          <Pre className={className} style={{ ...style }} tabIndex={0}>\n            {tokens.map((line, i) => (\n              <Line key={i} {...getLineProps({ line, key: i })}>\n                <LineNo>{i + 1}</LineNo>\n                <LineContent>\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({ token, key })} />\n                  ))}\n                </LineContent>\n              </Line>\n            ))}\n          </Pre>\n        )}\n      </Highlight>\n    </CodeWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  padding: 0 ${(p) => p.theme.spaces[2]};\n  margin-bottom: ${p => p.theme.spaces[3]};\n  margin-left: ${p => p.theme.spaces[2]};\n`;\n\nexport const ListItem = styled.li`\n  padding: ${(p) => p.theme.spaces[0]};\n  line-height: 1.8;\n  position: relative;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    background: ${p => p.theme.colors.secondary};\n    left: -${(p) => p.theme.spaces[2]};\n    top: 13px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Em = styled.em`\n  font-style: italic;\n`;\n","import styled from \"styled-components\";\n\nexport const Img = styled.img`\n  border-radius: ${(p) => p.theme.radius[1]};\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst IframeWrapper = styled.div`\n  border-radius: ${(p) => p.theme.radius[2]};\n  margin-bottom: ${(p) => p.theme.spaces[4]};\n`;\n\nexport const Iframe = (props) => {\n  return (\n    <IframeWrapper>\n      <iframe {...props} loading=\"lazy\" />\n    </IframeWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Aside = styled.aside`\n  padding-top: ${(p) => p.theme.spaces[4]};\n  padding-left: ${(p) => p.theme.spaces[4]};\n  padding-right: ${(p) => p.theme.spaces[4]};\n  padding-bottom: ${(p) => p.theme.spaces[1]};\n  background: ${(p) => p.theme.colors.neutral};\n  border-radius: ${(p) => p.theme.radius[2]};\n  margin-bottom: ${p => p.theme.spaces[4]};\n`;\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport Helmet from \"react-helmet\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { Container } from \"../components/Container\";\nimport { ThemeProvider } from \"../modules/theme/ThemeProvider\";\nimport { GlobalStyles } from \"../components/GlobalStyles\";\nimport { Link } from \"../components/Link\";\nimport { Text } from \"../components/Text\";\nimport { Code } from \"../components/Code\";\nimport { Main } from \"../components/Main\";\nimport { SkipToContent } from \"../components/SkipToContent\";\nimport { List, ListItem } from \"../components/List\";\nimport { Em } from \"../components/Em\";\nimport { Strong } from \"../components/Strong\";\nimport { Img } from \"../components/Img\";\nimport { Iframe } from \"../components/Iframe\";\nimport { Content } from \"../components/Content\";\nimport { Aside } from \"../components/Aside\";\nimport { Box } from \"../components/Box\";\nimport { PageWrapper } from \"../components/PageWrapper\";\nimport { ThemeMenuButton } from \"../modules/theme/ThemeMenuButton\";\nimport { Flex } from \"../components/Flex\";\n\n// component replacements\nconst shortcodes = {\n  a: Link,\n  h1: () => {\n    throw new Error(\"H1 is already used in frontmatter. Can't recreate one\");\n  },\n  h2: (props) => <Text {...props} as=\"h2\" />,\n  h3: (props) => <Text {...props} as=\"h3\" />,\n  h4: (props) => <Text {...props} as=\"h4\" />,\n  h5: (props) => <Text {...props} as=\"h5\" />,\n  h6: (props) => <Text {...props} as=\"h6\" />,\n  span: (props) => <Text {...props} as=\"span\" />,\n  p: (props) => <Text {...props} as=\"p\" />,\n  pre: Code,\n  ul: List,\n  li: ListItem,\n  em: Em,\n  strong: Strong,\n  img: Img,\n  iframe: Iframe,\n  aside: Aside,\n};\n\nconst SiteRoot = `https://mfrachet.github.io`;\nconst CourseTemplate = ({ children, pageContext, location, ...a }) => {\n  const { frontmatter } = pageContext;\n\n  return (\n    <ThemeProvider>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{frontmatter.title}</title>\n        <meta name=\"description\" content={frontmatter.excerpt} />\n        <meta name=\"twitter:creator\" content=\"@mfrachet\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta property=\"og:url\" content={`${SiteRoot}${location.pathname}`} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={frontmatter.title} />\n        <meta property=\"og:description\" content={frontmatter.excerpt} />\n        {frontmatter?.metaImage?.publicURL && (\n          <meta\n            property=\"og:image\"\n            content={`${SiteRoot}${frontmatter?.metaImage?.publicURL}`}\n          />\n        )}\n\n        {frontmatter.metaKeywords && (\n          <meta name=\"keywords\" content={frontmatter.metaKeywords} />\n        )}\n      </Helmet>\n\n      <SkipToContent />\n\n      <PageWrapper>\n        <Container>\n          <Content>\n            <Main>\n              <Box marginBottom={4}>\n                <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                  <div>\n                    <Link to=\"/\">\n                      <AiOutlineArrowLeft aria-hidden={true} /> Back home\n                    </Link>\n                  </div>\n\n                  <ThemeMenuButton />\n                </Flex>\n              </Box>\n              <Text as=\"h1\">{frontmatter.title}</Text>\n              <MDXProvider components={shortcodes}>{children}</MDXProvider>\n            </Main>\n          </Content>\n        </Container>\n      </PageWrapper>\n\n      <GlobalStyles />\n    </ThemeProvider>\n  );\n};\n\nexport default CourseTemplate;\n"],"sourceRoot":""}